<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="470" onload="init(evt)" viewBox="0 0 1200 470" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="470" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="453.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="453.00"> </text><svg id="frames" x="10" width="1180" total_samples="17799"><g><title>libsystem_malloc.dylib`_realloc (2 samples, 0.01%)</title><rect x="0.0225%" y="213" width="0.0112%" height="15" fill="rgb(227,0,7)" fg:x="4" fg:w="2"/><text x="0.2725%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (2 samples, 0.01%)</title><rect x="0.0225%" y="197" width="0.0112%" height="15" fill="rgb(217,0,24)" fg:x="4" fg:w="2"/><text x="0.2725%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (2 samples, 0.01%)</title><rect x="0.0225%" y="181" width="0.0112%" height="15" fill="rgb(221,193,54)" fg:x="4" fg:w="2"/><text x="0.2725%" y="191.50"></text></g><g><title>mango_chess`mango_chess::move_generation::generate_moves (5 samples, 0.03%)</title><rect x="0.0112%" y="277" width="0.0281%" height="15" fill="rgb(248,212,6)" fg:x="2" fg:w="5"/><text x="0.2612%" y="287.50"></text></g><g><title>mango_chess`mango_chess::board_state::BoardState::square_is_attacked (5 samples, 0.03%)</title><rect x="0.0112%" y="261" width="0.0281%" height="15" fill="rgb(208,68,35)" fg:x="2" fg:w="5"/><text x="0.2612%" y="271.50"></text></g><g><title>mango_chess`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.02%)</title><rect x="0.0225%" y="245" width="0.0169%" height="15" fill="rgb(232,128,0)" fg:x="4" fg:w="3"/><text x="0.2725%" y="255.50"></text></g><g><title>mango_chess`alloc::raw_vec::finish_grow (3 samples, 0.02%)</title><rect x="0.0225%" y="229" width="0.0169%" height="15" fill="rgb(207,160,47)" fg:x="4" fg:w="3"/><text x="0.2725%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (4 samples, 0.02%)</title><rect x="0.0506%" y="261" width="0.0225%" height="15" fill="rgb(228,23,34)" fg:x="9" fg:w="4"/><text x="0.3006%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (3 samples, 0.02%)</title><rect x="0.1405%" y="245" width="0.0169%" height="15" fill="rgb(218,30,26)" fg:x="25" fg:w="3"/><text x="0.3905%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.01%)</title><rect x="0.1629%" y="229" width="0.0112%" height="15" fill="rgb(220,122,19)" fg:x="29" fg:w="2"/><text x="0.4129%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (3 samples, 0.02%)</title><rect x="0.1854%" y="197" width="0.0169%" height="15" fill="rgb(250,228,42)" fg:x="33" fg:w="3"/><text x="0.4354%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (6 samples, 0.03%)</title><rect x="0.1742%" y="213" width="0.0337%" height="15" fill="rgb(240,193,28)" fg:x="31" fg:w="6"/><text x="0.4242%" y="223.50"></text></g><g><title>mango_chess`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (11 samples, 0.06%)</title><rect x="0.1573%" y="245" width="0.0618%" height="15" fill="rgb(216,20,37)" fg:x="28" fg:w="11"/><text x="0.4073%" y="255.50"></text></g><g><title>mango_chess`alloc::raw_vec::finish_grow (8 samples, 0.04%)</title><rect x="0.1742%" y="229" width="0.0449%" height="15" fill="rgb(206,188,39)" fg:x="31" fg:w="8"/><text x="0.4242%" y="239.50"></text></g><g><title>mango_chess`mango_chess::move_generation::generate_pseudo_moves_for_piece (2 samples, 0.01%)</title><rect x="0.2247%" y="245" width="0.0112%" height="15" fill="rgb(217,207,13)" fg:x="40" fg:w="2"/><text x="0.4747%" y="255.50"></text></g><g><title>mango_chess`mango_chess::move_generation::bishop_moves (2 samples, 0.01%)</title><rect x="0.2247%" y="229" width="0.0112%" height="15" fill="rgb(231,73,38)" fg:x="40" fg:w="2"/><text x="0.4747%" y="239.50"></text></g><g><title>mango_chess`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.01%)</title><rect x="0.2247%" y="213" width="0.0112%" height="15" fill="rgb(225,20,46)" fg:x="40" fg:w="2"/><text x="0.4747%" y="223.50"></text></g><g><title>mango_chess`alloc::raw_vec::finish_grow (2 samples, 0.01%)</title><rect x="0.2247%" y="197" width="0.0112%" height="15" fill="rgb(210,31,41)" fg:x="40" fg:w="2"/><text x="0.4747%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (2 samples, 0.01%)</title><rect x="0.2247%" y="181" width="0.0112%" height="15" fill="rgb(221,200,47)" fg:x="40" fg:w="2"/><text x="0.4747%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (2 samples, 0.01%)</title><rect x="0.2247%" y="165" width="0.0112%" height="15" fill="rgb(226,26,5)" fg:x="40" fg:w="2"/><text x="0.4747%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (2 samples, 0.01%)</title><rect x="0.2247%" y="149" width="0.0112%" height="15" fill="rgb(249,33,26)" fg:x="40" fg:w="2"/><text x="0.4747%" y="159.50"></text></g><g><title>mango_chess`mango_chess::board_state::BoardState::square_is_attacked (28 samples, 0.16%)</title><rect x="0.0843%" y="261" width="0.1573%" height="15" fill="rgb(235,183,28)" fg:x="15" fg:w="28"/><text x="0.3343%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (4 samples, 0.02%)</title><rect x="0.2753%" y="165" width="0.0225%" height="15" fill="rgb(221,5,38)" fg:x="49" fg:w="4"/><text x="0.5253%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (2 samples, 0.01%)</title><rect x="0.2865%" y="149" width="0.0112%" height="15" fill="rgb(247,18,42)" fg:x="51" fg:w="2"/><text x="0.5365%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.01%)</title><rect x="0.2865%" y="133" width="0.0112%" height="15" fill="rgb(241,131,45)" fg:x="51" fg:w="2"/><text x="0.5365%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (5 samples, 0.03%)</title><rect x="0.2753%" y="181" width="0.0281%" height="15" fill="rgb(249,31,29)" fg:x="49" fg:w="5"/><text x="0.5253%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (6 samples, 0.03%)</title><rect x="0.2753%" y="197" width="0.0337%" height="15" fill="rgb(225,111,53)" fg:x="49" fg:w="6"/><text x="0.5253%" y="207.50"></text></g><g><title>mango_chess`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (9 samples, 0.05%)</title><rect x="0.2697%" y="229" width="0.0506%" height="15" fill="rgb(238,160,17)" fg:x="48" fg:w="9"/><text x="0.5197%" y="239.50"></text></g><g><title>mango_chess`alloc::raw_vec::finish_grow (8 samples, 0.04%)</title><rect x="0.2753%" y="213" width="0.0449%" height="15" fill="rgb(214,148,48)" fg:x="49" fg:w="8"/><text x="0.5253%" y="223.50"></text></g><g><title>mango_chess`mango_chess::move_generation::generate_pseudo_moves_for_piece (2 samples, 0.01%)</title><rect x="0.3259%" y="229" width="0.0112%" height="15" fill="rgb(232,36,49)" fg:x="58" fg:w="2"/><text x="0.5759%" y="239.50"></text></g><g><title>mango_chess`mango_chess::move_generation::bishop_moves (2 samples, 0.01%)</title><rect x="0.3259%" y="213" width="0.0112%" height="15" fill="rgb(209,103,24)" fg:x="58" fg:w="2"/><text x="0.5759%" y="223.50"></text></g><g><title>mango_chess`mango_chess::board_state::BoardState::square_is_attacked (17 samples, 0.10%)</title><rect x="0.2472%" y="245" width="0.0955%" height="15" fill="rgb(229,88,8)" fg:x="44" fg:w="17"/><text x="0.4972%" y="255.50"></text></g><g><title>mango_chess`mango_chess::move_generation::generate_moves (21 samples, 0.12%)</title><rect x="0.2416%" y="261" width="0.1180%" height="15" fill="rgb(213,181,19)" fg:x="43" fg:w="21"/><text x="0.4916%" y="271.50"></text></g><g><title>mango_chess`mango_chess::move_generation::generate_pseudo_moves_for_player (3 samples, 0.02%)</title><rect x="0.3427%" y="245" width="0.0169%" height="15" fill="rgb(254,191,54)" fg:x="61" fg:w="3"/><text x="0.5927%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (2 samples, 0.01%)</title><rect x="0.4719%" y="245" width="0.0112%" height="15" fill="rgb(241,83,37)" fg:x="84" fg:w="2"/><text x="0.7219%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free (10 samples, 0.06%)</title><rect x="0.4832%" y="245" width="0.0562%" height="15" fill="rgb(233,36,39)" fg:x="86" fg:w="10"/><text x="0.7332%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_small (2 samples, 0.01%)</title><rect x="0.5394%" y="245" width="0.0112%" height="15" fill="rgb(226,3,54)" fg:x="96" fg:w="2"/><text x="0.7894%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.01%)</title><rect x="0.5506%" y="245" width="0.0112%" height="15" fill="rgb(245,192,40)" fg:x="98" fg:w="2"/><text x="0.8006%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.02%)</title><rect x="0.5618%" y="245" width="0.0169%" height="15" fill="rgb(238,167,29)" fg:x="100" fg:w="3"/><text x="0.8118%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.01%)</title><rect x="0.5674%" y="229" width="0.0112%" height="15" fill="rgb(232,182,51)" fg:x="101" fg:w="2"/><text x="0.8174%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (10 samples, 0.06%)</title><rect x="0.5787%" y="245" width="0.0562%" height="15" fill="rgb(231,60,39)" fg:x="103" fg:w="10"/><text x="0.8287%" y="255.50"></text></g><g><title>mango_chess`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (5 samples, 0.03%)</title><rect x="0.6405%" y="245" width="0.0281%" height="15" fill="rgb(208,69,12)" fg:x="114" fg:w="5"/><text x="0.8905%" y="255.50"></text></g><g><title>mango_chess`core::slice::sort::insertion_sort_shift_left (16 samples, 0.09%)</title><rect x="0.7248%" y="229" width="0.0899%" height="15" fill="rgb(235,93,37)" fg:x="129" fg:w="16"/><text x="0.9748%" y="239.50"></text></g><g><title>mango_chess`core::slice::sort::insertion_sort_shift_left (5 samples, 0.03%)</title><rect x="0.8147%" y="213" width="0.0281%" height="15" fill="rgb(213,116,39)" fg:x="145" fg:w="5"/><text x="1.0647%" y="223.50"></text></g><g><title>mango_chess`core::slice::sort::recurse (32 samples, 0.18%)</title><rect x="0.6686%" y="245" width="0.1798%" height="15" fill="rgb(222,207,29)" fg:x="119" fg:w="32"/><text x="0.9186%" y="255.50"></text></g><g><title>mango_chess`core::slice::sort::recurse (6 samples, 0.03%)</title><rect x="0.8147%" y="229" width="0.0337%" height="15" fill="rgb(206,96,30)" fg:x="145" fg:w="6"/><text x="1.0647%" y="239.50"></text></g><g><title>mango_chess`mango_chess::board_elements::CastlingRights::diff_from (9 samples, 0.05%)</title><rect x="1.0057%" y="229" width="0.0506%" height="15" fill="rgb(218,138,4)" fg:x="179" fg:w="9"/><text x="1.2557%" y="239.50"></text></g><g><title>mango_chess`mango_chess::board_state::BoardState::make_move (41 samples, 0.23%)</title><rect x="0.8484%" y="245" width="0.2304%" height="15" fill="rgb(250,191,14)" fg:x="151" fg:w="41"/><text x="1.0984%" y="255.50"></text></g><g><title>mango_chess`mango_chess::board_state::BoardState::move_piece (4 samples, 0.02%)</title><rect x="1.0562%" y="229" width="0.0225%" height="15" fill="rgb(239,60,40)" fg:x="188" fg:w="4"/><text x="1.3062%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_memset (3 samples, 0.02%)</title><rect x="1.7754%" y="229" width="0.0169%" height="15" fill="rgb(206,27,48)" fg:x="316" fg:w="3"/><text x="2.0254%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (4 samples, 0.02%)</title><rect x="1.9215%" y="197" width="0.0225%" height="15" fill="rgb(225,35,8)" fg:x="342" fg:w="4"/><text x="2.1715%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (30 samples, 0.17%)</title><rect x="1.7979%" y="229" width="0.1685%" height="15" fill="rgb(250,213,24)" fg:x="320" fg:w="30"/><text x="2.0479%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (15 samples, 0.08%)</title><rect x="1.8821%" y="213" width="0.0843%" height="15" fill="rgb(247,123,22)" fg:x="335" fg:w="15"/><text x="2.1321%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (4 samples, 0.02%)</title><rect x="1.9439%" y="197" width="0.0225%" height="15" fill="rgb(231,138,38)" fg:x="346" fg:w="4"/><text x="2.1939%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.01%)</title><rect x="1.9664%" y="229" width="0.0112%" height="15" fill="rgb(231,145,46)" fg:x="350" fg:w="2"/><text x="2.2164%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (2 samples, 0.01%)</title><rect x="1.9776%" y="229" width="0.0112%" height="15" fill="rgb(251,118,11)" fg:x="352" fg:w="2"/><text x="2.2276%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.01%)</title><rect x="2.0282%" y="213" width="0.0112%" height="15" fill="rgb(217,147,25)" fg:x="361" fg:w="2"/><text x="2.2782%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (2 samples, 0.01%)</title><rect x="2.0394%" y="213" width="0.0112%" height="15" fill="rgb(247,81,37)" fg:x="363" fg:w="2"/><text x="2.2894%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (3 samples, 0.02%)</title><rect x="2.0732%" y="197" width="0.0169%" height="15" fill="rgb(209,12,38)" fg:x="369" fg:w="3"/><text x="2.3232%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_good_size (3 samples, 0.02%)</title><rect x="2.1462%" y="165" width="0.0169%" height="15" fill="rgb(227,1,9)" fg:x="382" fg:w="3"/><text x="2.3962%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (4 samples, 0.02%)</title><rect x="2.2473%" y="149" width="0.0225%" height="15" fill="rgb(248,47,43)" fg:x="400" fg:w="4"/><text x="2.4973%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (9 samples, 0.05%)</title><rect x="2.2698%" y="149" width="0.0506%" height="15" fill="rgb(221,10,30)" fg:x="404" fg:w="9"/><text x="2.5198%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (7 samples, 0.04%)</title><rect x="2.2810%" y="133" width="0.0393%" height="15" fill="rgb(210,229,1)" fg:x="406" fg:w="7"/><text x="2.5310%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_tiny_check_and_zero_inline_meta_from_freelist (7 samples, 0.04%)</title><rect x="2.4046%" y="133" width="0.0393%" height="15" fill="rgb(222,148,37)" fg:x="428" fg:w="7"/><text x="2.6546%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (4 samples, 0.02%)</title><rect x="2.4440%" y="133" width="0.0225%" height="15" fill="rgb(234,67,33)" fg:x="435" fg:w="4"/><text x="2.6940%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (63 samples, 0.35%)</title><rect x="2.1630%" y="165" width="0.3540%" height="15" fill="rgb(247,98,35)" fg:x="385" fg:w="63"/><text x="2.4130%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (35 samples, 0.20%)</title><rect x="2.3204%" y="149" width="0.1966%" height="15" fill="rgb(247,138,52)" fg:x="413" fg:w="35"/><text x="2.5704%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (9 samples, 0.05%)</title><rect x="2.4664%" y="133" width="0.0506%" height="15" fill="rgb(213,79,30)" fg:x="439" fg:w="9"/><text x="2.7164%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (4 samples, 0.02%)</title><rect x="2.5170%" y="165" width="0.0225%" height="15" fill="rgb(246,177,23)" fg:x="448" fg:w="4"/><text x="2.7670%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (77 samples, 0.43%)</title><rect x="2.1237%" y="181" width="0.4326%" height="15" fill="rgb(230,62,27)" fg:x="378" fg:w="77"/><text x="2.3737%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (3 samples, 0.02%)</title><rect x="2.5395%" y="165" width="0.0169%" height="15" fill="rgb(216,154,8)" fg:x="452" fg:w="3"/><text x="2.7895%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_realloc (2 samples, 0.01%)</title><rect x="2.5563%" y="181" width="0.0112%" height="15" fill="rgb(244,35,45)" fg:x="455" fg:w="2"/><text x="2.8063%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (3 samples, 0.02%)</title><rect x="2.5676%" y="181" width="0.0169%" height="15" fill="rgb(251,115,12)" fg:x="457" fg:w="3"/><text x="2.8176%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (98 samples, 0.55%)</title><rect x="2.0900%" y="197" width="0.5506%" height="15" fill="rgb(240,54,50)" fg:x="372" fg:w="98"/><text x="2.3400%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (10 samples, 0.06%)</title><rect x="2.5844%" y="181" width="0.0562%" height="15" fill="rgb(233,84,52)" fg:x="460" fg:w="10"/><text x="2.8344%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (9 samples, 0.05%)</title><rect x="2.5900%" y="165" width="0.0506%" height="15" fill="rgb(207,117,47)" fg:x="461" fg:w="9"/><text x="2.8400%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`rack_get_thread_index (3 samples, 0.02%)</title><rect x="2.6406%" y="181" width="0.0169%" height="15" fill="rgb(249,43,39)" fg:x="470" fg:w="3"/><text x="2.8906%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (2 samples, 0.01%)</title><rect x="2.7249%" y="165" width="0.0112%" height="15" fill="rgb(209,38,44)" fg:x="485" fg:w="2"/><text x="2.9749%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_tiny_check_and_zero_inline_meta_from_freelist (2 samples, 0.01%)</title><rect x="2.7923%" y="149" width="0.0112%" height="15" fill="rgb(236,212,23)" fg:x="497" fg:w="2"/><text x="3.0423%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (31 samples, 0.17%)</title><rect x="2.6406%" y="197" width="0.1742%" height="15" fill="rgb(242,79,21)" fg:x="470" fg:w="31"/><text x="2.8906%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (28 samples, 0.16%)</title><rect x="2.6575%" y="181" width="0.1573%" height="15" fill="rgb(211,96,35)" fg:x="473" fg:w="28"/><text x="2.9075%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (14 samples, 0.08%)</title><rect x="2.7361%" y="165" width="0.0787%" height="15" fill="rgb(253,215,40)" fg:x="487" fg:w="14"/><text x="2.9861%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.01%)</title><rect x="2.8035%" y="149" width="0.0112%" height="15" fill="rgb(211,81,21)" fg:x="499" fg:w="2"/><text x="3.0535%" y="159.50"></text></g><g><title>mango_chess`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (150 samples, 0.84%)</title><rect x="1.9889%" y="229" width="0.8427%" height="15" fill="rgb(208,190,38)" fg:x="354" fg:w="150"/><text x="2.2389%" y="239.50"></text></g><g><title>mango_chess`alloc::raw_vec::finish_grow (138 samples, 0.78%)</title><rect x="2.0563%" y="213" width="0.7753%" height="15" fill="rgb(235,213,38)" fg:x="366" fg:w="138"/><text x="2.3063%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (3 samples, 0.02%)</title><rect x="2.8148%" y="197" width="0.0169%" height="15" fill="rgb(237,122,38)" fg:x="501" fg:w="3"/><text x="3.0648%" y="207.50"></text></g><g><title>mango_chess`alloc::raw_vec::finish_grow (4 samples, 0.02%)</title><rect x="2.8316%" y="229" width="0.0225%" height="15" fill="rgb(244,218,35)" fg:x="504" fg:w="4"/><text x="3.0816%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.01%)</title><rect x="2.8597%" y="133" width="0.0112%" height="15" fill="rgb(240,68,47)" fg:x="509" fg:w="2"/><text x="3.1097%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.01%)</title><rect x="2.8597%" y="117" width="0.0112%" height="15" fill="rgb(210,16,53)" fg:x="509" fg:w="2"/><text x="3.1097%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (6 samples, 0.03%)</title><rect x="2.8597%" y="165" width="0.0337%" height="15" fill="rgb(235,124,12)" fg:x="509" fg:w="6"/><text x="3.1097%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (6 samples, 0.03%)</title><rect x="2.8597%" y="149" width="0.0337%" height="15" fill="rgb(224,169,11)" fg:x="509" fg:w="6"/><text x="3.1097%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.02%)</title><rect x="2.8766%" y="133" width="0.0169%" height="15" fill="rgb(250,166,2)" fg:x="512" fg:w="3"/><text x="3.1266%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (3 samples, 0.02%)</title><rect x="2.8766%" y="117" width="0.0169%" height="15" fill="rgb(242,216,29)" fg:x="512" fg:w="3"/><text x="3.1266%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (3 samples, 0.02%)</title><rect x="2.8766%" y="101" width="0.0169%" height="15" fill="rgb(230,116,27)" fg:x="512" fg:w="3"/><text x="3.1266%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (7 samples, 0.04%)</title><rect x="2.8597%" y="181" width="0.0393%" height="15" fill="rgb(228,99,48)" fg:x="509" fg:w="7"/><text x="3.1097%" y="191.50"></text></g><g><title>mango_chess`mango_chess::move_generation::bishop_moves (9 samples, 0.05%)</title><rect x="2.8541%" y="229" width="0.0506%" height="15" fill="rgb(253,11,6)" fg:x="508" fg:w="9"/><text x="3.1041%" y="239.50"></text></g><g><title>mango_chess`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (8 samples, 0.04%)</title><rect x="2.8597%" y="213" width="0.0449%" height="15" fill="rgb(247,143,39)" fg:x="509" fg:w="8"/><text x="3.1097%" y="223.50"></text></g><g><title>mango_chess`alloc::raw_vec::finish_grow (8 samples, 0.04%)</title><rect x="2.8597%" y="197" width="0.0449%" height="15" fill="rgb(236,97,10)" fg:x="509" fg:w="8"/><text x="3.1097%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (9 samples, 0.05%)</title><rect x="2.9271%" y="133" width="0.0506%" height="15" fill="rgb(233,208,19)" fg:x="521" fg:w="9"/><text x="3.1771%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (5 samples, 0.03%)</title><rect x="2.9496%" y="117" width="0.0281%" height="15" fill="rgb(216,164,2)" fg:x="525" fg:w="5"/><text x="3.1996%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (10 samples, 0.06%)</title><rect x="2.9271%" y="149" width="0.0562%" height="15" fill="rgb(220,129,5)" fg:x="521" fg:w="10"/><text x="3.1771%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (12 samples, 0.07%)</title><rect x="2.9271%" y="165" width="0.0674%" height="15" fill="rgb(242,17,10)" fg:x="521" fg:w="12"/><text x="3.1771%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (2 samples, 0.01%)</title><rect x="2.9833%" y="149" width="0.0112%" height="15" fill="rgb(242,107,0)" fg:x="531" fg:w="2"/><text x="3.2333%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (2 samples, 0.01%)</title><rect x="2.9833%" y="133" width="0.0112%" height="15" fill="rgb(251,28,31)" fg:x="531" fg:w="2"/><text x="3.2333%" y="143.50"></text></g><g><title>mango_chess`mango_chess::move_generation::generate_pseudo_moves_for_piece (19 samples, 0.11%)</title><rect x="2.9047%" y="229" width="0.1067%" height="15" fill="rgb(233,223,10)" fg:x="517" fg:w="19"/><text x="3.1547%" y="239.50"></text></g><g><title>mango_chess`mango_chess::move_generation::bishop_moves (18 samples, 0.10%)</title><rect x="2.9103%" y="213" width="0.1011%" height="15" fill="rgb(215,21,27)" fg:x="518" fg:w="18"/><text x="3.1603%" y="223.50"></text></g><g><title>mango_chess`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (15 samples, 0.08%)</title><rect x="2.9271%" y="197" width="0.0843%" height="15" fill="rgb(232,23,21)" fg:x="521" fg:w="15"/><text x="3.1771%" y="207.50"></text></g><g><title>mango_chess`alloc::raw_vec::finish_grow (15 samples, 0.08%)</title><rect x="2.9271%" y="181" width="0.0843%" height="15" fill="rgb(244,5,23)" fg:x="521" fg:w="15"/><text x="3.1771%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.02%)</title><rect x="2.9946%" y="165" width="0.0169%" height="15" fill="rgb(226,81,46)" fg:x="533" fg:w="3"/><text x="3.2446%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.01%)</title><rect x="3.0002%" y="149" width="0.0112%" height="15" fill="rgb(247,70,30)" fg:x="534" fg:w="2"/><text x="3.2502%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (3 samples, 0.02%)</title><rect x="3.0620%" y="133" width="0.0169%" height="15" fill="rgb(212,68,19)" fg:x="545" fg:w="3"/><text x="3.3120%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (2 samples, 0.01%)</title><rect x="3.0788%" y="133" width="0.0112%" height="15" fill="rgb(240,187,13)" fg:x="548" fg:w="2"/><text x="3.3288%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (9 samples, 0.05%)</title><rect x="3.0507%" y="149" width="0.0506%" height="15" fill="rgb(223,113,26)" fg:x="543" fg:w="9"/><text x="3.3007%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (2 samples, 0.01%)</title><rect x="3.0901%" y="133" width="0.0112%" height="15" fill="rgb(206,192,2)" fg:x="550" fg:w="2"/><text x="3.3401%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (10 samples, 0.06%)</title><rect x="3.0507%" y="165" width="0.0562%" height="15" fill="rgb(241,108,4)" fg:x="543" fg:w="10"/><text x="3.3007%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (17 samples, 0.10%)</title><rect x="3.0451%" y="181" width="0.0955%" height="15" fill="rgb(247,173,49)" fg:x="542" fg:w="17"/><text x="3.2951%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (5 samples, 0.03%)</title><rect x="3.1125%" y="165" width="0.0281%" height="15" fill="rgb(224,114,35)" fg:x="554" fg:w="5"/><text x="3.3625%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (5 samples, 0.03%)</title><rect x="3.1125%" y="149" width="0.0281%" height="15" fill="rgb(245,159,27)" fg:x="554" fg:w="5"/><text x="3.3625%" y="159.50"></text></g><g><title>mango_chess`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (25 samples, 0.14%)</title><rect x="3.0339%" y="213" width="0.1405%" height="15" fill="rgb(245,172,44)" fg:x="540" fg:w="25"/><text x="3.2839%" y="223.50"></text></g><g><title>mango_chess`alloc::raw_vec::finish_grow (23 samples, 0.13%)</title><rect x="3.0451%" y="197" width="0.1292%" height="15" fill="rgb(236,23,11)" fg:x="542" fg:w="23"/><text x="3.2951%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.03%)</title><rect x="3.1406%" y="181" width="0.0337%" height="15" fill="rgb(205,117,38)" fg:x="559" fg:w="6"/><text x="3.3906%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.03%)</title><rect x="3.1462%" y="165" width="0.0281%" height="15" fill="rgb(237,72,25)" fg:x="560" fg:w="5"/><text x="3.3962%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2 samples, 0.01%)</title><rect x="3.1631%" y="149" width="0.0112%" height="15" fill="rgb(244,70,9)" fg:x="563" fg:w="2"/><text x="3.4131%" y="159.50"></text></g><g><title>mango_chess`mango_chess::board_state::BoardState::square_is_attacked (375 samples, 2.11%)</title><rect x="1.0787%" y="245" width="2.1069%" height="15" fill="rgb(217,125,39)" fg:x="192" fg:w="375"/><text x="1.3287%" y="255.50">m..</text></g><g><title>mango_chess`mango_chess::move_generation::rook_moves (31 samples, 0.17%)</title><rect x="3.0114%" y="229" width="0.1742%" height="15" fill="rgb(235,36,10)" fg:x="536" fg:w="31"/><text x="3.2614%" y="239.50"></text></g><g><title>mango_chess`alloc::raw_vec::finish_grow (2 samples, 0.01%)</title><rect x="3.1743%" y="213" width="0.0112%" height="15" fill="rgb(251,123,47)" fg:x="565" fg:w="2"/><text x="3.4243%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (4 samples, 0.02%)</title><rect x="3.3036%" y="229" width="0.0225%" height="15" fill="rgb(221,13,13)" fg:x="588" fg:w="4"/><text x="3.5536%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (9 samples, 0.05%)</title><rect x="3.3260%" y="229" width="0.0506%" height="15" fill="rgb(238,131,9)" fg:x="592" fg:w="9"/><text x="3.5760%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.01%)</title><rect x="3.3766%" y="229" width="0.0112%" height="15" fill="rgb(211,50,8)" fg:x="601" fg:w="2"/><text x="3.6266%" y="239.50"></text></g><g><title>mango_chess`DYLD-STUB$$free (7 samples, 0.04%)</title><rect x="3.3878%" y="229" width="0.0393%" height="15" fill="rgb(245,182,24)" fg:x="603" fg:w="7"/><text x="3.6378%" y="239.50"></text></g><g><title>mango_chess`__rdl_alloc (2 samples, 0.01%)</title><rect x="3.4272%" y="229" width="0.0112%" height="15" fill="rgb(242,14,37)" fg:x="610" fg:w="2"/><text x="3.6772%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (4 samples, 0.02%)</title><rect x="3.5058%" y="149" width="0.0225%" height="15" fill="rgb(246,228,12)" fg:x="624" fg:w="4"/><text x="3.7558%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.01%)</title><rect x="3.5171%" y="133" width="0.0112%" height="15" fill="rgb(213,55,15)" fg:x="626" fg:w="2"/><text x="3.7671%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (7 samples, 0.04%)</title><rect x="3.5058%" y="165" width="0.0393%" height="15" fill="rgb(209,9,3)" fg:x="624" fg:w="7"/><text x="3.7558%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (9 samples, 0.05%)</title><rect x="3.5058%" y="181" width="0.0506%" height="15" fill="rgb(230,59,30)" fg:x="624" fg:w="9"/><text x="3.7558%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.01%)</title><rect x="3.5451%" y="165" width="0.0112%" height="15" fill="rgb(209,121,21)" fg:x="631" fg:w="2"/><text x="3.7951%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (10 samples, 0.06%)</title><rect x="3.5058%" y="197" width="0.0562%" height="15" fill="rgb(220,109,13)" fg:x="624" fg:w="10"/><text x="3.7558%" y="207.50"></text></g><g><title>mango_chess`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (23 samples, 0.13%)</title><rect x="3.4384%" y="229" width="0.1292%" height="15" fill="rgb(232,18,1)" fg:x="612" fg:w="23"/><text x="3.6884%" y="239.50"></text></g><g><title>mango_chess`alloc::raw_vec::finish_grow (11 samples, 0.06%)</title><rect x="3.5058%" y="213" width="0.0618%" height="15" fill="rgb(215,41,42)" fg:x="624" fg:w="11"/><text x="3.7558%" y="223.50"></text></g><g><title>mango_chess`mango_chess::board_elements::CastlingRights::diff_from (7 samples, 0.04%)</title><rect x="3.7362%" y="213" width="0.0393%" height="15" fill="rgb(224,123,36)" fg:x="665" fg:w="7"/><text x="3.9862%" y="223.50"></text></g><g><title>mango_chess`mango_chess::board_state::BoardState::make_move (47 samples, 0.26%)</title><rect x="3.5732%" y="229" width="0.2641%" height="15" fill="rgb(240,125,3)" fg:x="636" fg:w="47"/><text x="3.8232%" y="239.50"></text></g><g><title>mango_chess`mango_chess::board_state::BoardState::move_piece (11 samples, 0.06%)</title><rect x="3.7755%" y="213" width="0.0618%" height="15" fill="rgb(205,98,50)" fg:x="672" fg:w="11"/><text x="4.0255%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_memset (2 samples, 0.01%)</title><rect x="5.1295%" y="213" width="0.0112%" height="15" fill="rgb(205,185,37)" fg:x="913" fg:w="2"/><text x="5.3795%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (7 samples, 0.04%)</title><rect x="5.1407%" y="213" width="0.0393%" height="15" fill="rgb(238,207,15)" fg:x="915" fg:w="7"/><text x="5.3907%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`get_tiny_previous_free_msize (2 samples, 0.01%)</title><rect x="5.3149%" y="197" width="0.0112%" height="15" fill="rgb(213,199,42)" fg:x="946" fg:w="2"/><text x="5.5649%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (9 samples, 0.05%)</title><rect x="5.5003%" y="181" width="0.0506%" height="15" fill="rgb(235,201,11)" fg:x="979" fg:w="9"/><text x="5.7503%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (72 samples, 0.40%)</title><rect x="5.1801%" y="213" width="0.4045%" height="15" fill="rgb(207,46,11)" fg:x="922" fg:w="72"/><text x="5.4301%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (46 samples, 0.26%)</title><rect x="5.3261%" y="197" width="0.2584%" height="15" fill="rgb(241,35,35)" fg:x="948" fg:w="46"/><text x="5.5761%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (6 samples, 0.03%)</title><rect x="5.5509%" y="181" width="0.0337%" height="15" fill="rgb(243,32,47)" fg:x="988" fg:w="6"/><text x="5.8009%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.01%)</title><rect x="5.5846%" y="213" width="0.0112%" height="15" fill="rgb(247,202,23)" fg:x="994" fg:w="2"/><text x="5.8346%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (10 samples, 0.06%)</title><rect x="5.5958%" y="213" width="0.0562%" height="15" fill="rgb(219,102,11)" fg:x="996" fg:w="10"/><text x="5.8458%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.03%)</title><rect x="5.7419%" y="197" width="0.0281%" height="15" fill="rgb(243,110,44)" fg:x="1022" fg:w="5"/><text x="5.9919%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (6 samples, 0.03%)</title><rect x="5.7700%" y="197" width="0.0337%" height="15" fill="rgb(222,74,54)" fg:x="1027" fg:w="6"/><text x="6.0200%" y="207.50"></text></g><g><title>mango_chess`__rdl_realloc (5 samples, 0.03%)</title><rect x="5.8149%" y="197" width="0.0281%" height="15" fill="rgb(216,99,12)" fg:x="1035" fg:w="5"/><text x="6.0649%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.03%)</title><rect x="6.1408%" y="133" width="0.0337%" height="15" fill="rgb(226,22,26)" fg:x="1093" fg:w="6"/><text x="6.3908%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (3 samples, 0.02%)</title><rect x="6.1576%" y="117" width="0.0169%" height="15" fill="rgb(217,163,10)" fg:x="1096" fg:w="3"/><text x="6.4076%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (10 samples, 0.06%)</title><rect x="6.1745%" y="133" width="0.0562%" height="15" fill="rgb(213,25,53)" fg:x="1099" fg:w="10"/><text x="6.4245%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.01%)</title><rect x="6.2307%" y="133" width="0.0112%" height="15" fill="rgb(252,105,26)" fg:x="1109" fg:w="2"/><text x="6.4807%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (16 samples, 0.09%)</title><rect x="6.2419%" y="133" width="0.0899%" height="15" fill="rgb(220,39,43)" fg:x="1111" fg:w="16"/><text x="6.4919%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (14 samples, 0.08%)</title><rect x="6.2532%" y="117" width="0.0787%" height="15" fill="rgb(229,68,48)" fg:x="1113" fg:w="14"/><text x="6.5032%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_tiny_check_and_zero_inline_meta_from_freelist (6 samples, 0.03%)</title><rect x="6.5846%" y="117" width="0.0337%" height="15" fill="rgb(252,8,32)" fg:x="1172" fg:w="6"/><text x="6.8346%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (12 samples, 0.07%)</title><rect x="6.6183%" y="117" width="0.0674%" height="15" fill="rgb(223,20,43)" fg:x="1178" fg:w="12"/><text x="6.8683%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (121 samples, 0.68%)</title><rect x="6.0902%" y="149" width="0.6798%" height="15" fill="rgb(229,81,49)" fg:x="1084" fg:w="121"/><text x="6.3402%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (77 samples, 0.43%)</title><rect x="6.3374%" y="133" width="0.4326%" height="15" fill="rgb(236,28,36)" fg:x="1128" fg:w="77"/><text x="6.5874%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (15 samples, 0.08%)</title><rect x="6.6858%" y="117" width="0.0843%" height="15" fill="rgb(249,185,26)" fg:x="1190" fg:w="15"/><text x="6.9358%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (3 samples, 0.02%)</title><rect x="6.7700%" y="149" width="0.0169%" height="15" fill="rgb(249,174,33)" fg:x="1205" fg:w="3"/><text x="7.0200%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (143 samples, 0.80%)</title><rect x="5.9891%" y="165" width="0.8034%" height="15" fill="rgb(233,201,37)" fg:x="1066" fg:w="143"/><text x="6.2391%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_realloc (3 samples, 0.02%)</title><rect x="6.7925%" y="165" width="0.0169%" height="15" fill="rgb(221,78,26)" fg:x="1209" fg:w="3"/><text x="7.0425%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (177 samples, 0.99%)</title><rect x="5.9273%" y="181" width="0.9944%" height="15" fill="rgb(250,127,30)" fg:x="1055" fg:w="177"/><text x="6.1773%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (19 samples, 0.11%)</title><rect x="6.8150%" y="165" width="0.1067%" height="15" fill="rgb(230,49,44)" fg:x="1213" fg:w="19"/><text x="7.0650%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (19 samples, 0.11%)</title><rect x="6.8150%" y="149" width="0.1067%" height="15" fill="rgb(229,67,23)" fg:x="1213" fg:w="19"/><text x="7.0650%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`rack_get_thread_index (7 samples, 0.04%)</title><rect x="6.9498%" y="165" width="0.0393%" height="15" fill="rgb(249,83,47)" fg:x="1237" fg:w="7"/><text x="7.1998%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (5 samples, 0.03%)</title><rect x="7.0397%" y="149" width="0.0281%" height="15" fill="rgb(215,43,3)" fg:x="1253" fg:w="5"/><text x="7.2897%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_tiny_check_and_zero_inline_meta_from_freelist (2 samples, 0.01%)</title><rect x="7.1184%" y="133" width="0.0112%" height="15" fill="rgb(238,154,13)" fg:x="1267" fg:w="2"/><text x="7.3684%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (44 samples, 0.25%)</title><rect x="6.9217%" y="181" width="0.2472%" height="15" fill="rgb(219,56,2)" fg:x="1232" fg:w="44"/><text x="7.1717%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (32 samples, 0.18%)</title><rect x="6.9892%" y="165" width="0.1798%" height="15" fill="rgb(233,0,4)" fg:x="1244" fg:w="32"/><text x="7.2392%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (18 samples, 0.10%)</title><rect x="7.0678%" y="149" width="0.1011%" height="15" fill="rgb(235,30,7)" fg:x="1258" fg:w="18"/><text x="7.3178%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (7 samples, 0.04%)</title><rect x="7.1296%" y="133" width="0.0393%" height="15" fill="rgb(250,79,13)" fg:x="1269" fg:w="7"/><text x="7.3796%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (4 samples, 0.02%)</title><rect x="7.1689%" y="181" width="0.0225%" height="15" fill="rgb(211,146,34)" fg:x="1276" fg:w="4"/><text x="7.4189%" y="191.50"></text></g><g><title>mango_chess`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (276 samples, 1.55%)</title><rect x="5.6520%" y="213" width="1.5506%" height="15" fill="rgb(228,22,38)" fg:x="1006" fg:w="276"/><text x="5.9020%" y="223.50"></text></g><g><title>mango_chess`alloc::raw_vec::finish_grow (242 samples, 1.36%)</title><rect x="5.8430%" y="197" width="1.3596%" height="15" fill="rgb(235,168,5)" fg:x="1040" fg:w="242"/><text x="6.0930%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.01%)</title><rect x="7.1914%" y="181" width="0.0112%" height="15" fill="rgb(221,155,16)" fg:x="1280" fg:w="2"/><text x="7.4414%" y="191.50"></text></g><g><title>mango_chess`alloc::raw_vec::finish_grow (6 samples, 0.03%)</title><rect x="7.2027%" y="213" width="0.0337%" height="15" fill="rgb(215,215,53)" fg:x="1282" fg:w="6"/><text x="7.4527%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (2 samples, 0.01%)</title><rect x="7.2701%" y="149" width="0.0112%" height="15" fill="rgb(223,4,10)" fg:x="1294" fg:w="2"/><text x="7.5201%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (2 samples, 0.01%)</title><rect x="7.2701%" y="133" width="0.0112%" height="15" fill="rgb(234,103,6)" fg:x="1294" fg:w="2"/><text x="7.5201%" y="143.50"></text></g><g><title>mango_chess`mango_chess::move_generation::bishop_moves (10 samples, 0.06%)</title><rect x="7.2364%" y="213" width="0.0562%" height="15" fill="rgb(227,97,0)" fg:x="1288" fg:w="10"/><text x="7.4864%" y="223.50"></text></g><g><title>mango_chess`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.02%)</title><rect x="7.2701%" y="197" width="0.0225%" height="15" fill="rgb(234,150,53)" fg:x="1294" fg:w="4"/><text x="7.5201%" y="207.50"></text></g><g><title>mango_chess`alloc::raw_vec::finish_grow (4 samples, 0.02%)</title><rect x="7.2701%" y="181" width="0.0225%" height="15" fill="rgb(228,201,54)" fg:x="1294" fg:w="4"/><text x="7.5201%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (4 samples, 0.02%)</title><rect x="7.2701%" y="165" width="0.0225%" height="15" fill="rgb(222,22,37)" fg:x="1294" fg:w="4"/><text x="7.5201%" y="175.50"></text></g><g><title>mango_chess`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.01%)</title><rect x="7.3038%" y="197" width="0.0112%" height="15" fill="rgb(237,53,32)" fg:x="1300" fg:w="2"/><text x="7.5538%" y="207.50"></text></g><g><title>mango_chess`alloc::raw_vec::finish_grow (2 samples, 0.01%)</title><rect x="7.3038%" y="181" width="0.0112%" height="15" fill="rgb(233,25,53)" fg:x="1300" fg:w="2"/><text x="7.5538%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (2 samples, 0.01%)</title><rect x="7.3937%" y="101" width="0.0112%" height="15" fill="rgb(210,40,34)" fg:x="1316" fg:w="2"/><text x="7.6437%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (2 samples, 0.01%)</title><rect x="7.3937%" y="85" width="0.0112%" height="15" fill="rgb(241,220,44)" fg:x="1316" fg:w="2"/><text x="7.6437%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (9 samples, 0.05%)</title><rect x="7.3768%" y="133" width="0.0506%" height="15" fill="rgb(235,28,35)" fg:x="1313" fg:w="9"/><text x="7.6268%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (7 samples, 0.04%)</title><rect x="7.3881%" y="117" width="0.0393%" height="15" fill="rgb(210,56,17)" fg:x="1315" fg:w="7"/><text x="7.6381%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (4 samples, 0.02%)</title><rect x="7.4049%" y="101" width="0.0225%" height="15" fill="rgb(224,130,29)" fg:x="1318" fg:w="4"/><text x="7.6549%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (11 samples, 0.06%)</title><rect x="7.3712%" y="149" width="0.0618%" height="15" fill="rgb(235,212,8)" fg:x="1312" fg:w="11"/><text x="7.6212%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.02%)</title><rect x="7.4330%" y="149" width="0.0169%" height="15" fill="rgb(223,33,50)" fg:x="1323" fg:w="3"/><text x="7.6830%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.01%)</title><rect x="7.4386%" y="133" width="0.0112%" height="15" fill="rgb(219,149,13)" fg:x="1324" fg:w="2"/><text x="7.6886%" y="143.50"></text></g><g><title>mango_chess`mango_chess::move_generation::generate_pseudo_moves_for_piece (30 samples, 0.17%)</title><rect x="7.2925%" y="213" width="0.1685%" height="15" fill="rgb(250,156,29)" fg:x="1298" fg:w="30"/><text x="7.5425%" y="223.50"></text></g><g><title>mango_chess`mango_chess::move_generation::bishop_moves (26 samples, 0.15%)</title><rect x="7.3150%" y="197" width="0.1461%" height="15" fill="rgb(216,193,19)" fg:x="1302" fg:w="26"/><text x="7.5650%" y="207.50"></text></g><g><title>mango_chess`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (18 samples, 0.10%)</title><rect x="7.3600%" y="181" width="0.1011%" height="15" fill="rgb(216,135,14)" fg:x="1310" fg:w="18"/><text x="7.6100%" y="191.50"></text></g><g><title>mango_chess`alloc::raw_vec::finish_grow (16 samples, 0.09%)</title><rect x="7.3712%" y="165" width="0.0899%" height="15" fill="rgb(241,47,5)" fg:x="1312" fg:w="16"/><text x="7.6212%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.01%)</title><rect x="7.5341%" y="181" width="0.0112%" height="15" fill="rgb(233,42,35)" fg:x="1341" fg:w="2"/><text x="7.7841%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (4 samples, 0.02%)</title><rect x="7.6128%" y="117" width="0.0225%" height="15" fill="rgb(231,13,6)" fg:x="1355" fg:w="4"/><text x="7.8628%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (3 samples, 0.02%)</title><rect x="7.6184%" y="101" width="0.0169%" height="15" fill="rgb(207,181,40)" fg:x="1356" fg:w="3"/><text x="7.8684%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.01%)</title><rect x="7.6240%" y="85" width="0.0112%" height="15" fill="rgb(254,173,49)" fg:x="1357" fg:w="2"/><text x="7.8740%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.02%)</title><rect x="7.6409%" y="117" width="0.0169%" height="15" fill="rgb(221,1,38)" fg:x="1360" fg:w="3"/><text x="7.8909%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.01%)</title><rect x="7.6465%" y="101" width="0.0112%" height="15" fill="rgb(206,124,46)" fg:x="1361" fg:w="2"/><text x="7.8965%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2 samples, 0.01%)</title><rect x="7.6465%" y="85" width="0.0112%" height="15" fill="rgb(249,21,11)" fg:x="1361" fg:w="2"/><text x="7.8965%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (2 samples, 0.01%)</title><rect x="7.6577%" y="117" width="0.0112%" height="15" fill="rgb(222,201,40)" fg:x="1363" fg:w="2"/><text x="7.9077%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (2 samples, 0.01%)</title><rect x="7.6577%" y="101" width="0.0112%" height="15" fill="rgb(235,61,29)" fg:x="1363" fg:w="2"/><text x="7.9077%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (22 samples, 0.12%)</title><rect x="7.5903%" y="133" width="0.1236%" height="15" fill="rgb(219,207,3)" fg:x="1351" fg:w="22"/><text x="7.8403%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (8 samples, 0.04%)</title><rect x="7.6690%" y="117" width="0.0449%" height="15" fill="rgb(222,56,46)" fg:x="1365" fg:w="8"/><text x="7.9190%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (2 samples, 0.01%)</title><rect x="7.7139%" y="133" width="0.0112%" height="15" fill="rgb(239,76,54)" fg:x="1373" fg:w="2"/><text x="7.9639%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (28 samples, 0.16%)</title><rect x="7.5735%" y="149" width="0.1573%" height="15" fill="rgb(231,124,27)" fg:x="1348" fg:w="28"/><text x="7.8235%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (33 samples, 0.19%)</title><rect x="7.5622%" y="165" width="0.1854%" height="15" fill="rgb(249,195,6)" fg:x="1346" fg:w="33"/><text x="7.8122%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (3 samples, 0.02%)</title><rect x="7.7308%" y="149" width="0.0169%" height="15" fill="rgb(237,174,47)" fg:x="1376" fg:w="3"/><text x="7.9808%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (2 samples, 0.01%)</title><rect x="7.7364%" y="133" width="0.0112%" height="15" fill="rgb(206,201,31)" fg:x="1377" fg:w="2"/><text x="7.9864%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_tiny_check_and_zero_inline_meta_from_freelist (2 samples, 0.01%)</title><rect x="7.7813%" y="117" width="0.0112%" height="15" fill="rgb(231,57,52)" fg:x="1385" fg:w="2"/><text x="8.0313%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.05%)</title><rect x="7.7476%" y="165" width="0.0506%" height="15" fill="rgb(248,177,22)" fg:x="1379" fg:w="9"/><text x="7.9976%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (8 samples, 0.04%)</title><rect x="7.7532%" y="149" width="0.0449%" height="15" fill="rgb(215,211,37)" fg:x="1380" fg:w="8"/><text x="8.0032%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.03%)</title><rect x="7.7701%" y="133" width="0.0281%" height="15" fill="rgb(241,128,51)" fg:x="1383" fg:w="5"/><text x="8.0201%" y="143.50"></text></g><g><title>mango_chess`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (49 samples, 0.28%)</title><rect x="7.5285%" y="197" width="0.2753%" height="15" fill="rgb(227,165,31)" fg:x="1340" fg:w="49"/><text x="7.7785%" y="207.50"></text></g><g><title>mango_chess`alloc::raw_vec::finish_grow (44 samples, 0.25%)</title><rect x="7.5566%" y="181" width="0.2472%" height="15" fill="rgb(228,167,24)" fg:x="1345" fg:w="44"/><text x="7.8066%" y="191.50"></text></g><g><title>mango_chess`mango_chess::board_state::BoardState::square_is_attacked (708 samples, 3.98%)</title><rect x="3.8373%" y="229" width="3.9778%" height="15" fill="rgb(228,143,12)" fg:x="683" fg:w="708"/><text x="4.0873%" y="239.50">mang..</text></g><g><title>mango_chess`mango_chess::move_generation::rook_moves (63 samples, 0.35%)</title><rect x="7.4611%" y="213" width="0.3540%" height="15" fill="rgb(249,149,8)" fg:x="1328" fg:w="63"/><text x="7.7111%" y="223.50"></text></g><g><title>mango_chess`alloc::raw_vec::finish_grow (2 samples, 0.01%)</title><rect x="7.8038%" y="197" width="0.0112%" height="15" fill="rgb(243,35,44)" fg:x="1389" fg:w="2"/><text x="8.0538%" y="207.50"></text></g><g><title>mango_chess`mango_chess::move_generation::generate_pseudo_moves_for_piece (2 samples, 0.01%)</title><rect x="7.8150%" y="229" width="0.0112%" height="15" fill="rgb(246,89,9)" fg:x="1391" fg:w="2"/><text x="8.0650%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.01%)</title><rect x="7.8319%" y="213" width="0.0112%" height="15" fill="rgb(233,213,13)" fg:x="1394" fg:w="2"/><text x="8.0819%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.01%)</title><rect x="7.8319%" y="197" width="0.0112%" height="15" fill="rgb(233,141,41)" fg:x="1394" fg:w="2"/><text x="8.0819%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.02%)</title><rect x="7.8431%" y="213" width="0.0169%" height="15" fill="rgb(239,167,4)" fg:x="1396" fg:w="3"/><text x="8.0931%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.01%)</title><rect x="7.8488%" y="197" width="0.0112%" height="15" fill="rgb(209,217,16)" fg:x="1397" fg:w="2"/><text x="8.0988%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (3 samples, 0.02%)</title><rect x="7.8825%" y="165" width="0.0169%" height="15" fill="rgb(219,88,35)" fg:x="1403" fg:w="3"/><text x="8.1325%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (3 samples, 0.02%)</title><rect x="7.8825%" y="149" width="0.0169%" height="15" fill="rgb(220,193,23)" fg:x="1403" fg:w="3"/><text x="8.1325%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (2 samples, 0.01%)</title><rect x="7.8881%" y="133" width="0.0112%" height="15" fill="rgb(230,90,52)" fg:x="1404" fg:w="2"/><text x="8.1381%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (2 samples, 0.01%)</title><rect x="7.8881%" y="117" width="0.0112%" height="15" fill="rgb(252,106,19)" fg:x="1404" fg:w="2"/><text x="8.1381%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (5 samples, 0.03%)</title><rect x="7.8768%" y="181" width="0.0281%" height="15" fill="rgb(206,74,20)" fg:x="1402" fg:w="5"/><text x="8.1268%" y="191.50"></text></g><g><title>mango_chess`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (9 samples, 0.05%)</title><rect x="7.8656%" y="213" width="0.0506%" height="15" fill="rgb(230,138,44)" fg:x="1400" fg:w="9"/><text x="8.1156%" y="223.50"></text></g><g><title>mango_chess`alloc::raw_vec::finish_grow (8 samples, 0.04%)</title><rect x="7.8712%" y="197" width="0.0449%" height="15" fill="rgb(235,182,43)" fg:x="1401" fg:w="8"/><text x="8.1212%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.01%)</title><rect x="7.9049%" y="181" width="0.0112%" height="15" fill="rgb(242,16,51)" fg:x="1407" fg:w="2"/><text x="8.1549%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.01%)</title><rect x="7.9049%" y="165" width="0.0112%" height="15" fill="rgb(248,9,4)" fg:x="1407" fg:w="2"/><text x="8.1549%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2 samples, 0.01%)</title><rect x="7.9049%" y="149" width="0.0112%" height="15" fill="rgb(210,31,22)" fg:x="1407" fg:w="2"/><text x="8.1549%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.01%)</title><rect x="7.9049%" y="133" width="0.0112%" height="15" fill="rgb(239,54,39)" fg:x="1407" fg:w="2"/><text x="8.1549%" y="143.50"></text></g><g><title>mango_chess`mango_chess::move_generation::bishop_moves (4 samples, 0.02%)</title><rect x="7.9162%" y="213" width="0.0225%" height="15" fill="rgb(230,99,41)" fg:x="1409" fg:w="4"/><text x="8.1662%" y="223.50"></text></g><g><title>mango_chess`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.02%)</title><rect x="7.9218%" y="197" width="0.0169%" height="15" fill="rgb(253,106,12)" fg:x="1410" fg:w="3"/><text x="8.1718%" y="207.50"></text></g><g><title>mango_chess`alloc::raw_vec::finish_grow (3 samples, 0.02%)</title><rect x="7.9218%" y="181" width="0.0169%" height="15" fill="rgb(213,46,41)" fg:x="1410" fg:w="3"/><text x="8.1718%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (3 samples, 0.02%)</title><rect x="7.9218%" y="165" width="0.0169%" height="15" fill="rgb(215,133,35)" fg:x="1410" fg:w="3"/><text x="8.1718%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (3 samples, 0.02%)</title><rect x="7.9218%" y="149" width="0.0169%" height="15" fill="rgb(213,28,5)" fg:x="1410" fg:w="3"/><text x="8.1718%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (3 samples, 0.02%)</title><rect x="7.9218%" y="133" width="0.0169%" height="15" fill="rgb(215,77,49)" fg:x="1410" fg:w="3"/><text x="8.1718%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.02%)</title><rect x="7.9218%" y="117" width="0.0169%" height="15" fill="rgb(248,100,22)" fg:x="1410" fg:w="3"/><text x="8.1718%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (2 samples, 0.01%)</title><rect x="7.9274%" y="101" width="0.0112%" height="15" fill="rgb(208,67,9)" fg:x="1411" fg:w="2"/><text x="8.1774%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (2 samples, 0.01%)</title><rect x="7.9274%" y="85" width="0.0112%" height="15" fill="rgb(219,133,21)" fg:x="1411" fg:w="2"/><text x="8.1774%" y="95.50"></text></g><g><title>mango_chess`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (5 samples, 0.03%)</title><rect x="7.9780%" y="197" width="0.0281%" height="15" fill="rgb(246,46,29)" fg:x="1420" fg:w="5"/><text x="8.2280%" y="207.50"></text></g><g><title>mango_chess`alloc::raw_vec::finish_grow (4 samples, 0.02%)</title><rect x="7.9836%" y="181" width="0.0225%" height="15" fill="rgb(246,185,52)" fg:x="1421" fg:w="4"/><text x="8.2336%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (4 samples, 0.02%)</title><rect x="7.9836%" y="165" width="0.0225%" height="15" fill="rgb(252,136,11)" fg:x="1421" fg:w="4"/><text x="8.2336%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (4 samples, 0.02%)</title><rect x="7.9836%" y="149" width="0.0225%" height="15" fill="rgb(219,138,53)" fg:x="1421" fg:w="4"/><text x="8.2336%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.01%)</title><rect x="7.9948%" y="133" width="0.0112%" height="15" fill="rgb(211,51,23)" fg:x="1423" fg:w="2"/><text x="8.2448%" y="143.50"></text></g><g><title>mango_chess`mango_chess::move_generation::generate_pseudo_moves_for_piece (19 samples, 0.11%)</title><rect x="7.9386%" y="213" width="0.1067%" height="15" fill="rgb(247,221,28)" fg:x="1413" fg:w="19"/><text x="8.1886%" y="223.50"></text></g><g><title>mango_chess`mango_chess::move_generation::bishop_moves (7 samples, 0.04%)</title><rect x="8.0061%" y="197" width="0.0393%" height="15" fill="rgb(251,222,45)" fg:x="1425" fg:w="7"/><text x="8.2561%" y="207.50"></text></g><g><title>mango_chess`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.01%)</title><rect x="8.0342%" y="181" width="0.0112%" height="15" fill="rgb(217,162,53)" fg:x="1430" fg:w="2"/><text x="8.2842%" y="191.50"></text></g><g><title>mango_chess`alloc::raw_vec::finish_grow (2 samples, 0.01%)</title><rect x="8.0342%" y="165" width="0.0112%" height="15" fill="rgb(229,93,14)" fg:x="1430" fg:w="2"/><text x="8.2842%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (2 samples, 0.01%)</title><rect x="8.0342%" y="149" width="0.0112%" height="15" fill="rgb(209,67,49)" fg:x="1430" fg:w="2"/><text x="8.2842%" y="159.50"></text></g><g><title>mango_chess`mango_chess::move_generation::generate_pseudo_moves_for_player (42 samples, 0.24%)</title><rect x="7.8263%" y="229" width="0.2360%" height="15" fill="rgb(213,87,29)" fg:x="1393" fg:w="42"/><text x="8.0763%" y="239.50"></text></g><g><title>mango_chess`mango_chess::move_generation::rook_moves (3 samples, 0.02%)</title><rect x="8.0454%" y="213" width="0.0169%" height="15" fill="rgb(205,151,52)" fg:x="1432" fg:w="3"/><text x="8.2954%" y="223.50"></text></g><g><title>mango_chess`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.01%)</title><rect x="8.0510%" y="197" width="0.0112%" height="15" fill="rgb(253,215,39)" fg:x="1433" fg:w="2"/><text x="8.3010%" y="207.50"></text></g><g><title>mango_chess`alloc::raw_vec::finish_grow (2 samples, 0.01%)</title><rect x="8.0510%" y="181" width="0.0112%" height="15" fill="rgb(221,220,41)" fg:x="1433" fg:w="2"/><text x="8.3010%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (2 samples, 0.01%)</title><rect x="8.0510%" y="165" width="0.0112%" height="15" fill="rgb(218,133,21)" fg:x="1433" fg:w="2"/><text x="8.3010%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (2 samples, 0.01%)</title><rect x="8.0510%" y="149" width="0.0112%" height="15" fill="rgb(221,193,43)" fg:x="1433" fg:w="2"/><text x="8.3010%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (2 samples, 0.01%)</title><rect x="8.0510%" y="133" width="0.0112%" height="15" fill="rgb(240,128,52)" fg:x="1433" fg:w="2"/><text x="8.3010%" y="143.50"></text></g><g><title>mango_chess`mango_chess::move_generation::generate_moves (870 samples, 4.89%)</title><rect x="3.1856%" y="245" width="4.8879%" height="15" fill="rgb(253,114,12)" fg:x="567" fg:w="870"/><text x="3.4356%" y="255.50">mango_..</text></g><g><title>mango_chess`mango_chess::move_generation::rook_moves (2 samples, 0.01%)</title><rect x="8.0623%" y="229" width="0.0112%" height="15" fill="rgb(215,223,47)" fg:x="1435" fg:w="2"/><text x="8.3123%" y="239.50"></text></g><g><title>mango_chess`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (5 samples, 0.03%)</title><rect x="8.1016%" y="229" width="0.0281%" height="15" fill="rgb(248,225,23)" fg:x="1442" fg:w="5"/><text x="8.3516%" y="239.50"></text></g><g><title>mango_chess`alloc::raw_vec::finish_grow (5 samples, 0.03%)</title><rect x="8.1016%" y="213" width="0.0281%" height="15" fill="rgb(250,108,0)" fg:x="1442" fg:w="5"/><text x="8.3516%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (5 samples, 0.03%)</title><rect x="8.1016%" y="197" width="0.0281%" height="15" fill="rgb(228,208,7)" fg:x="1442" fg:w="5"/><text x="8.3516%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (5 samples, 0.03%)</title><rect x="8.1016%" y="181" width="0.0281%" height="15" fill="rgb(244,45,10)" fg:x="1442" fg:w="5"/><text x="8.3516%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (3 samples, 0.02%)</title><rect x="8.1128%" y="165" width="0.0169%" height="15" fill="rgb(207,125,25)" fg:x="1444" fg:w="3"/><text x="8.3628%" y="175.50"></text></g><g><title>mango_chess`mango_chess::move_generation::bishop_moves (3 samples, 0.02%)</title><rect x="8.1297%" y="229" width="0.0169%" height="15" fill="rgb(210,195,18)" fg:x="1447" fg:w="3"/><text x="8.3797%" y="239.50"></text></g><g><title>mango_chess`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.02%)</title><rect x="8.1297%" y="213" width="0.0169%" height="15" fill="rgb(249,80,12)" fg:x="1447" fg:w="3"/><text x="8.3797%" y="223.50"></text></g><g><title>mango_chess`alloc::raw_vec::finish_grow (3 samples, 0.02%)</title><rect x="8.1297%" y="197" width="0.0169%" height="15" fill="rgb(221,65,9)" fg:x="1447" fg:w="3"/><text x="8.3797%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (3 samples, 0.02%)</title><rect x="8.1297%" y="181" width="0.0169%" height="15" fill="rgb(235,49,36)" fg:x="1447" fg:w="3"/><text x="8.3797%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (3 samples, 0.02%)</title><rect x="8.1297%" y="165" width="0.0169%" height="15" fill="rgb(225,32,20)" fg:x="1447" fg:w="3"/><text x="8.3797%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (3 samples, 0.02%)</title><rect x="8.1297%" y="149" width="0.0169%" height="15" fill="rgb(215,141,46)" fg:x="1447" fg:w="3"/><text x="8.3797%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.01%)</title><rect x="8.1353%" y="133" width="0.0112%" height="15" fill="rgb(250,160,47)" fg:x="1448" fg:w="2"/><text x="8.3853%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (2 samples, 0.01%)</title><rect x="8.1353%" y="117" width="0.0112%" height="15" fill="rgb(216,222,40)" fg:x="1448" fg:w="2"/><text x="8.3853%" y="127.50"></text></g><g><title>mango_chess`mango_chess::move_generation::generate_pseudo_moves_for_piece (2 samples, 0.01%)</title><rect x="8.1465%" y="229" width="0.0112%" height="15" fill="rgb(234,217,39)" fg:x="1450" fg:w="2"/><text x="8.3965%" y="239.50"></text></g><g><title>mango_chess`mango_chess::move_generation::generate_pseudo_moves_for_player (18 samples, 0.10%)</title><rect x="8.0735%" y="245" width="0.1011%" height="15" fill="rgb(207,178,40)" fg:x="1437" fg:w="18"/><text x="8.3235%" y="255.50"></text></g><g><title>mango_chess`mango_chess::move_generation::rook_moves (3 samples, 0.02%)</title><rect x="8.1578%" y="229" width="0.0169%" height="15" fill="rgb(221,136,13)" fg:x="1452" fg:w="3"/><text x="8.4078%" y="239.50"></text></g><g><title>mango_chess`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.01%)</title><rect x="8.1634%" y="213" width="0.0112%" height="15" fill="rgb(249,199,10)" fg:x="1453" fg:w="2"/><text x="8.4134%" y="223.50"></text></g><g><title>mango_chess`alloc::raw_vec::finish_grow (2 samples, 0.01%)</title><rect x="8.1634%" y="197" width="0.0112%" height="15" fill="rgb(249,222,13)" fg:x="1453" fg:w="2"/><text x="8.4134%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (2 samples, 0.01%)</title><rect x="8.1634%" y="181" width="0.0112%" height="15" fill="rgb(244,185,38)" fg:x="1453" fg:w="2"/><text x="8.4134%" y="191.50"></text></g><g><title>mango_chess`mango_chess::move_generation::rook_moves (3 samples, 0.02%)</title><rect x="8.1746%" y="245" width="0.0169%" height="15" fill="rgb(236,202,9)" fg:x="1455" fg:w="3"/><text x="8.4246%" y="255.50"></text></g><g><title>mango_chess`mango_chess::move_scoring::move_score (8 samples, 0.04%)</title><rect x="8.1915%" y="245" width="0.0449%" height="15" fill="rgb(250,229,37)" fg:x="1458" fg:w="8"/><text x="8.4415%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.02%)</title><rect x="8.2645%" y="229" width="0.0169%" height="15" fill="rgb(206,174,23)" fg:x="1471" fg:w="3"/><text x="8.5145%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (5 samples, 0.03%)</title><rect x="8.2814%" y="229" width="0.0281%" height="15" fill="rgb(211,33,43)" fg:x="1474" fg:w="5"/><text x="8.5314%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (4 samples, 0.02%)</title><rect x="8.3095%" y="229" width="0.0225%" height="15" fill="rgb(245,58,50)" fg:x="1479" fg:w="4"/><text x="8.5595%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (7 samples, 0.04%)</title><rect x="8.4443%" y="213" width="0.0393%" height="15" fill="rgb(244,68,36)" fg:x="1503" fg:w="7"/><text x="8.6943%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr (2 samples, 0.01%)</title><rect x="8.4892%" y="213" width="0.0112%" height="15" fill="rgb(232,229,15)" fg:x="1511" fg:w="2"/><text x="8.7392%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_small (31 samples, 0.17%)</title><rect x="8.3319%" y="229" width="0.1742%" height="15" fill="rgb(254,30,23)" fg:x="1483" fg:w="31"/><text x="8.5819%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (159 samples, 0.89%)</title><rect x="8.5117%" y="229" width="0.8933%" height="15" fill="rgb(235,160,14)" fg:x="1515" fg:w="159"/><text x="8.7617%" y="239.50"></text></g><g><title>mango_chess`DYLD-STUB$$free (2 samples, 0.01%)</title><rect x="9.4050%" y="229" width="0.0112%" height="15" fill="rgb(212,155,44)" fg:x="1674" fg:w="2"/><text x="9.6550%" y="239.50"></text></g><g><title>mango_chess`DYLD-STUB$$memcpy (17 samples, 0.10%)</title><rect x="9.4163%" y="229" width="0.0955%" height="15" fill="rgb(226,2,50)" fg:x="1676" fg:w="17"/><text x="9.6663%" y="239.50"></text></g><g><title>mango_chess`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.02%)</title><rect x="9.5118%" y="229" width="0.0169%" height="15" fill="rgb(234,177,6)" fg:x="1693" fg:w="3"/><text x="9.7618%" y="239.50"></text></g><g><title>mango_chess`mango_chess::board_state::BoardState::make_move (47 samples, 0.26%)</title><rect x="9.5286%" y="229" width="0.2641%" height="15" fill="rgb(217,24,9)" fg:x="1696" fg:w="47"/><text x="9.7786%" y="239.50"></text></g><g><title>mango_chess`mango_chess::board_state::BoardState::square_is_attacked (40 samples, 0.22%)</title><rect x="9.7927%" y="229" width="0.2247%" height="15" fill="rgb(220,13,46)" fg:x="1743" fg:w="40"/><text x="10.0427%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.03%)</title><rect x="12.0625%" y="213" width="0.0281%" height="15" fill="rgb(239,221,27)" fg:x="2147" fg:w="5"/><text x="12.3125%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (68 samples, 0.38%)</title><rect x="12.0906%" y="213" width="0.3820%" height="15" fill="rgb(222,198,25)" fg:x="2152" fg:w="68"/><text x="12.3406%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (226 samples, 1.27%)</title><rect x="12.4726%" y="213" width="1.2697%" height="15" fill="rgb(211,99,13)" fg:x="2220" fg:w="226"/><text x="12.7226%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (4 samples, 0.02%)</title><rect x="13.8379%" y="197" width="0.0225%" height="15" fill="rgb(232,111,31)" fg:x="2463" fg:w="4"/><text x="14.0879%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_small (23 samples, 0.13%)</title><rect x="13.7423%" y="213" width="0.1292%" height="15" fill="rgb(245,82,37)" fg:x="2446" fg:w="23"/><text x="13.9923%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (33 samples, 0.19%)</title><rect x="13.8716%" y="213" width="0.1854%" height="15" fill="rgb(227,149,46)" fg:x="2469" fg:w="33"/><text x="14.1216%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (8 samples, 0.04%)</title><rect x="14.0851%" y="181" width="0.0449%" height="15" fill="rgb(218,36,50)" fg:x="2507" fg:w="8"/><text x="14.3351%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (26 samples, 0.15%)</title><rect x="14.0570%" y="213" width="0.1461%" height="15" fill="rgb(226,80,48)" fg:x="2502" fg:w="26"/><text x="14.3070%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (23 samples, 0.13%)</title><rect x="14.0738%" y="197" width="0.1292%" height="15" fill="rgb(238,224,15)" fg:x="2505" fg:w="23"/><text x="14.3238%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (13 samples, 0.07%)</title><rect x="14.1300%" y="181" width="0.0730%" height="15" fill="rgb(241,136,10)" fg:x="2515" fg:w="13"/><text x="14.3800%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_tiny_check_and_zero_inline_meta_from_freelist (3 samples, 0.02%)</title><rect x="14.1862%" y="165" width="0.0169%" height="15" fill="rgb(208,32,45)" fg:x="2525" fg:w="3"/><text x="14.4362%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (3 samples, 0.02%)</title><rect x="14.2030%" y="213" width="0.0169%" height="15" fill="rgb(207,135,9)" fg:x="2528" fg:w="3"/><text x="14.4530%" y="223.50"></text></g><g><title>mango_chess`DYLD-STUB$$free (89 samples, 0.50%)</title><rect x="14.2199%" y="213" width="0.5000%" height="15" fill="rgb(206,86,44)" fg:x="2531" fg:w="89"/><text x="14.4699%" y="223.50"></text></g><g><title>mango_chess`DYLD-STUB$$memcpy (4 samples, 0.02%)</title><rect x="14.7255%" y="213" width="0.0225%" height="15" fill="rgb(245,177,15)" fg:x="2621" fg:w="4"/><text x="14.9755%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (3 samples, 0.02%)</title><rect x="15.3941%" y="197" width="0.0169%" height="15" fill="rgb(206,64,50)" fg:x="2740" fg:w="3"/><text x="15.6441%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_memmove (3 samples, 0.02%)</title><rect x="15.4953%" y="149" width="0.0169%" height="15" fill="rgb(234,36,40)" fg:x="2758" fg:w="3"/><text x="15.7453%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free_small (4 samples, 0.02%)</title><rect x="15.5683%" y="133" width="0.0225%" height="15" fill="rgb(213,64,8)" fg:x="2771" fg:w="4"/><text x="15.8183%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`get_tiny_previous_free_msize (2 samples, 0.01%)</title><rect x="15.6582%" y="117" width="0.0112%" height="15" fill="rgb(210,75,36)" fg:x="2787" fg:w="2"/><text x="15.9082%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (31 samples, 0.17%)</title><rect x="15.5908%" y="133" width="0.1742%" height="15" fill="rgb(229,88,21)" fg:x="2775" fg:w="31"/><text x="15.8408%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (17 samples, 0.10%)</title><rect x="15.6694%" y="117" width="0.0955%" height="15" fill="rgb(252,204,47)" fg:x="2789" fg:w="17"/><text x="15.9194%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`small_size (4 samples, 0.02%)</title><rect x="15.7649%" y="133" width="0.0225%" height="15" fill="rgb(208,77,27)" fg:x="2806" fg:w="4"/><text x="16.0149%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`small_try_realloc_in_place (12 samples, 0.07%)</title><rect x="15.7874%" y="133" width="0.0674%" height="15" fill="rgb(221,76,26)" fg:x="2810" fg:w="12"/><text x="16.0374%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (3 samples, 0.02%)</title><rect x="15.8380%" y="117" width="0.0169%" height="15" fill="rgb(225,139,18)" fg:x="2819" fg:w="3"/><text x="16.0880%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`rack_get_thread_index (2 samples, 0.01%)</title><rect x="15.8773%" y="117" width="0.0112%" height="15" fill="rgb(230,137,11)" fg:x="2826" fg:w="2"/><text x="16.1273%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (5 samples, 0.03%)</title><rect x="15.9672%" y="85" width="0.0281%" height="15" fill="rgb(212,28,1)" fg:x="2842" fg:w="5"/><text x="16.2172%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (30 samples, 0.17%)</title><rect x="15.8548%" y="133" width="0.1685%" height="15" fill="rgb(248,164,17)" fg:x="2822" fg:w="30"/><text x="16.1048%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (24 samples, 0.13%)</title><rect x="15.8885%" y="117" width="0.1348%" height="15" fill="rgb(222,171,42)" fg:x="2828" fg:w="24"/><text x="16.1385%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (19 samples, 0.11%)</title><rect x="15.9166%" y="101" width="0.1067%" height="15" fill="rgb(243,84,45)" fg:x="2833" fg:w="19"/><text x="16.1666%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (4 samples, 0.02%)</title><rect x="16.0009%" y="85" width="0.0225%" height="15" fill="rgb(252,49,23)" fg:x="2848" fg:w="4"/><text x="16.2509%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (6 samples, 0.03%)</title><rect x="16.0234%" y="133" width="0.0337%" height="15" fill="rgb(215,19,7)" fg:x="2852" fg:w="6"/><text x="16.2734%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (5 samples, 0.03%)</title><rect x="16.0290%" y="117" width="0.0281%" height="15" fill="rgb(238,81,41)" fg:x="2853" fg:w="5"/><text x="16.2790%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (104 samples, 0.58%)</title><rect x="15.5121%" y="149" width="0.5843%" height="15" fill="rgb(210,199,37)" fg:x="2761" fg:w="104"/><text x="15.7621%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (6 samples, 0.03%)</title><rect x="16.0627%" y="133" width="0.0337%" height="15" fill="rgb(244,192,49)" fg:x="2859" fg:w="6"/><text x="16.3127%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (127 samples, 0.71%)</title><rect x="15.4840%" y="165" width="0.7135%" height="15" fill="rgb(226,211,11)" fg:x="2756" fg:w="127"/><text x="15.7340%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (17 samples, 0.10%)</title><rect x="16.1020%" y="149" width="0.0955%" height="15" fill="rgb(236,162,54)" fg:x="2866" fg:w="17"/><text x="16.3520%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_realloc (2 samples, 0.01%)</title><rect x="16.1975%" y="165" width="0.0112%" height="15" fill="rgb(220,229,9)" fg:x="2883" fg:w="2"/><text x="16.4475%" y="175.50"></text></g><g><title>mango_chess`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (284 samples, 1.60%)</title><rect x="14.7536%" y="213" width="1.5956%" height="15" fill="rgb(250,87,22)" fg:x="2626" fg:w="284"/><text x="15.0036%" y="223.50"></text></g><g><title>mango_chess`alloc::raw_vec::finish_grow (165 samples, 0.93%)</title><rect x="15.4222%" y="197" width="0.9270%" height="15" fill="rgb(239,43,17)" fg:x="2745" fg:w="165"/><text x="15.6722%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (165 samples, 0.93%)</title><rect x="15.4222%" y="181" width="0.9270%" height="15" fill="rgb(231,177,25)" fg:x="2745" fg:w="165"/><text x="15.6722%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (24 samples, 0.13%)</title><rect x="16.2144%" y="165" width="0.1348%" height="15" fill="rgb(219,179,1)" fg:x="2886" fg:w="24"/><text x="16.4644%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (23 samples, 0.13%)</title><rect x="16.2200%" y="149" width="0.1292%" height="15" fill="rgb(238,219,53)" fg:x="2887" fg:w="23"/><text x="16.4700%" y="159.50"></text></g><g><title>mango_chess`mango_chess::board_elements::CastlingRights::diff_from (16 samples, 0.09%)</title><rect x="16.3549%" y="213" width="0.0899%" height="15" fill="rgb(232,167,36)" fg:x="2911" fg:w="16"/><text x="16.6049%" y="223.50"></text></g><g><title>mango_chess`mango_chess::board_elements::CastlingRights::diff_from (101 samples, 0.57%)</title><rect x="19.6247%" y="197" width="0.5674%" height="15" fill="rgb(244,19,51)" fg:x="3493" fg:w="101"/><text x="19.8747%" y="207.50"></text></g><g><title>mango_chess`mango_chess::board_state::BoardState::make_move (912 samples, 5.12%)</title><rect x="16.4447%" y="213" width="5.1239%" height="15" fill="rgb(224,6,22)" fg:x="2927" fg:w="912"/><text x="16.6947%" y="223.50">mango_..</text></g><g><title>mango_chess`mango_chess::board_state::BoardState::move_piece (245 samples, 1.38%)</title><rect x="20.1921%" y="197" width="1.3765%" height="15" fill="rgb(224,145,5)" fg:x="3594" fg:w="245"/><text x="20.4421%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_memset (35 samples, 0.20%)</title><rect x="44.3396%" y="197" width="0.1966%" height="15" fill="rgb(234,130,49)" fg:x="7892" fg:w="35"/><text x="44.5896%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (100 samples, 0.56%)</title><rect x="44.5362%" y="197" width="0.5618%" height="15" fill="rgb(254,6,2)" fg:x="7927" fg:w="100"/><text x="44.7862%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_small (2 samples, 0.01%)</title><rect x="45.0980%" y="197" width="0.0112%" height="15" fill="rgb(208,96,46)" fg:x="8027" fg:w="2"/><text x="45.3480%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`get_tiny_previous_free_msize (39 samples, 0.22%)</title><rect x="48.1375%" y="181" width="0.2191%" height="15" fill="rgb(239,3,39)" fg:x="8568" fg:w="39"/><text x="48.3875%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (3 samples, 0.02%)</title><rect x="48.3566%" y="181" width="0.0169%" height="15" fill="rgb(233,210,1)" fg:x="8607" fg:w="3"/><text x="48.6066%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (165 samples, 0.93%)</title><rect x="51.1377%" y="165" width="0.9270%" height="15" fill="rgb(244,137,37)" fg:x="9102" fg:w="165"/><text x="51.3877%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1,337 samples, 7.51%)</title><rect x="45.1093%" y="197" width="7.5117%" height="15" fill="rgb(240,136,2)" fg:x="8029" fg:w="1337"/><text x="45.3593%" y="207.50">libsystem_..</text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (756 samples, 4.25%)</title><rect x="48.3735%" y="181" width="4.2474%" height="15" fill="rgb(239,18,37)" fg:x="8610" fg:w="756"/><text x="48.6235%" y="191.50">libsy..</text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (99 samples, 0.56%)</title><rect x="52.0647%" y="165" width="0.5562%" height="15" fill="rgb(218,185,22)" fg:x="9267" fg:w="99"/><text x="52.3147%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (60 samples, 0.34%)</title><rect x="52.6209%" y="197" width="0.3371%" height="15" fill="rgb(225,218,4)" fg:x="9366" fg:w="60"/><text x="52.8709%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (116 samples, 0.65%)</title><rect x="52.9580%" y="197" width="0.6517%" height="15" fill="rgb(230,182,32)" fg:x="9426" fg:w="116"/><text x="53.2080%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (163 samples, 0.92%)</title><rect x="54.6267%" y="181" width="0.9158%" height="15" fill="rgb(242,56,43)" fg:x="9723" fg:w="163"/><text x="54.8767%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (49 samples, 0.28%)</title><rect x="55.5424%" y="181" width="0.2753%" height="15" fill="rgb(233,99,24)" fg:x="9886" fg:w="49"/><text x="55.7924%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc (2 samples, 0.01%)</title><rect x="55.8177%" y="181" width="0.0112%" height="15" fill="rgb(234,209,42)" fg:x="9935" fg:w="2"/><text x="56.0677%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.05%)</title><rect x="55.8290%" y="181" width="0.0506%" height="15" fill="rgb(227,7,12)" fg:x="9937" fg:w="9"/><text x="56.0790%" y="191.50"></text></g><g><title>mango_chess`DYLD-STUB$$malloc (18 samples, 0.10%)</title><rect x="55.8795%" y="181" width="0.1011%" height="15" fill="rgb(245,203,43)" fg:x="9946" fg:w="18"/><text x="56.1295%" y="191.50"></text></g><g><title>mango_chess`DYLD-STUB$$realloc (49 samples, 0.28%)</title><rect x="55.9807%" y="181" width="0.2753%" height="15" fill="rgb(238,205,33)" fg:x="9964" fg:w="49"/><text x="56.2307%" y="191.50"></text></g><g><title>mango_chess`__rdl_alloc (21 samples, 0.12%)</title><rect x="56.2560%" y="181" width="0.1180%" height="15" fill="rgb(231,56,7)" fg:x="10013" fg:w="21"/><text x="56.5060%" y="191.50"></text></g><g><title>mango_chess`__rdl_realloc (20 samples, 0.11%)</title><rect x="56.3740%" y="181" width="0.1124%" height="15" fill="rgb(244,186,29)" fg:x="10034" fg:w="20"/><text x="56.6240%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (15 samples, 0.08%)</title><rect x="57.1493%" y="165" width="0.0843%" height="15" fill="rgb(234,111,31)" fg:x="10172" fg:w="15"/><text x="57.3993%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (2 samples, 0.01%)</title><rect x="60.3124%" y="133" width="0.0112%" height="15" fill="rgb(241,149,10)" fg:x="10735" fg:w="2"/><text x="60.5624%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_good_size (51 samples, 0.29%)</title><rect x="60.3292%" y="133" width="0.2865%" height="15" fill="rgb(249,206,44)" fg:x="10738" fg:w="51"/><text x="60.5792%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (3 samples, 0.02%)</title><rect x="61.9473%" y="117" width="0.0169%" height="15" fill="rgb(251,153,30)" fg:x="11026" fg:w="3"/><text x="62.1973%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_tiny_check_and_zero_inline_meta_from_freelist (4 samples, 0.02%)</title><rect x="61.9642%" y="117" width="0.0225%" height="15" fill="rgb(239,152,38)" fg:x="11029" fg:w="4"/><text x="62.2142%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (22 samples, 0.12%)</title><rect x="61.9866%" y="117" width="0.1236%" height="15" fill="rgb(249,139,47)" fg:x="11033" fg:w="22"/><text x="62.2366%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (10 samples, 0.06%)</title><rect x="62.0540%" y="101" width="0.0562%" height="15" fill="rgb(244,64,35)" fg:x="11045" fg:w="10"/><text x="62.3040%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (206 samples, 1.16%)</title><rect x="62.1102%" y="117" width="1.1574%" height="15" fill="rgb(216,46,15)" fg:x="11055" fg:w="206"/><text x="62.3602%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`rack_get_thread_index (4 samples, 0.02%)</title><rect x="63.2788%" y="101" width="0.0225%" height="15" fill="rgb(250,74,19)" fg:x="11263" fg:w="4"/><text x="63.5288%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (2 samples, 0.01%)</title><rect x="63.3182%" y="85" width="0.0112%" height="15" fill="rgb(249,42,33)" fg:x="11270" fg:w="2"/><text x="63.5682%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (20 samples, 0.11%)</title><rect x="63.2676%" y="117" width="0.1124%" height="15" fill="rgb(242,149,17)" fg:x="11261" fg:w="20"/><text x="63.5176%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (13 samples, 0.07%)</title><rect x="63.3069%" y="101" width="0.0730%" height="15" fill="rgb(244,29,21)" fg:x="11268" fg:w="13"/><text x="63.5569%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (9 samples, 0.05%)</title><rect x="63.3294%" y="85" width="0.0506%" height="15" fill="rgb(220,130,37)" fg:x="11272" fg:w="9"/><text x="63.5794%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (328 samples, 1.84%)</title><rect x="63.3800%" y="117" width="1.8428%" height="15" fill="rgb(211,67,2)" fg:x="11281" fg:w="328"/><text x="63.6300%" y="127.50">l..</text></g><g><title>libsystem_malloc.dylib`tiny_size (277 samples, 1.56%)</title><rect x="63.6665%" y="101" width="1.5563%" height="15" fill="rgb(235,68,52)" fg:x="11332" fg:w="277"/><text x="63.9165%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (6 samples, 0.03%)</title><rect x="65.2228%" y="117" width="0.0337%" height="15" fill="rgb(246,142,3)" fg:x="11609" fg:w="6"/><text x="65.4728%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.01%)</title><rect x="65.2565%" y="117" width="0.0112%" height="15" fill="rgb(241,25,7)" fg:x="11615" fg:w="2"/><text x="65.5065%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (11 samples, 0.06%)</title><rect x="65.2677%" y="117" width="0.0618%" height="15" fill="rgb(242,119,39)" fg:x="11617" fg:w="11"/><text x="65.5177%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_tiny_check_and_zero_inline_meta_from_freelist (118 samples, 0.66%)</title><rect x="69.4196%" y="101" width="0.6630%" height="15" fill="rgb(241,98,45)" fg:x="12356" fg:w="118"/><text x="69.6696%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (271 samples, 1.52%)</title><rect x="70.0826%" y="101" width="1.5226%" height="15" fill="rgb(254,28,30)" fg:x="12474" fg:w="271"/><text x="70.3326%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (2,262 samples, 12.71%)</title><rect x="60.6214%" y="133" width="12.7086%" height="15" fill="rgb(241,142,54)" fg:x="10790" fg:w="2262"/><text x="60.8714%" y="143.50">libsystem_malloc.dy..</text></g><g><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (1,424 samples, 8.00%)</title><rect x="65.3295%" y="117" width="8.0004%" height="15" fill="rgb(222,85,15)" fg:x="11628" fg:w="1424"/><text x="65.5795%" y="127.50">libsystem_m..</text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (307 samples, 1.72%)</title><rect x="71.6051%" y="101" width="1.7248%" height="15" fill="rgb(210,85,47)" fg:x="12745" fg:w="307"/><text x="71.8551%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (36 samples, 0.20%)</title><rect x="73.3300%" y="133" width="0.2023%" height="15" fill="rgb(224,206,25)" fg:x="13052" fg:w="36"/><text x="73.5800%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (58 samples, 0.33%)</title><rect x="73.5322%" y="133" width="0.3259%" height="15" fill="rgb(243,201,19)" fg:x="13088" fg:w="58"/><text x="73.7822%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (2,662 samples, 14.96%)</title><rect x="58.9078%" y="149" width="14.9559%" height="15" fill="rgb(236,59,4)" fg:x="10485" fg:w="2662"/><text x="59.1578%" y="159.50">libsystem_malloc.dylib`..</text></g><g><title>libsystem_malloc.dylib`default_zone_realloc (73 samples, 0.41%)</title><rect x="73.8637%" y="149" width="0.4101%" height="15" fill="rgb(254,179,45)" fg:x="13147" fg:w="73"/><text x="74.1137%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (74 samples, 0.42%)</title><rect x="74.2738%" y="149" width="0.4158%" height="15" fill="rgb(226,14,10)" fg:x="13220" fg:w="74"/><text x="74.5238%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (3,426 samples, 19.25%)</title><rect x="57.2336%" y="165" width="19.2483%" height="15" fill="rgb(244,27,41)" fg:x="10187" fg:w="3426"/><text x="57.4836%" y="175.50">libsystem_malloc.dylib`_realloc</text></g><g><title>libsystem_malloc.dylib`szone_size (319 samples, 1.79%)</title><rect x="74.6896%" y="149" width="1.7922%" height="15" fill="rgb(235,35,32)" fg:x="13294" fg:w="319"/><text x="74.9396%" y="159.50">l..</text></g><g><title>libsystem_malloc.dylib`tiny_size (277 samples, 1.56%)</title><rect x="74.9256%" y="133" width="1.5563%" height="15" fill="rgb(218,68,31)" fg:x="13336" fg:w="277"/><text x="75.1756%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`rack_get_thread_index (126 samples, 0.71%)</title><rect x="76.9875%" y="149" width="0.7079%" height="15" fill="rgb(207,120,37)" fg:x="13703" fg:w="126"/><text x="77.2375%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (32 samples, 0.18%)</title><rect x="77.6954%" y="149" width="0.1798%" height="15" fill="rgb(227,98,0)" fg:x="13829" fg:w="32"/><text x="77.9454%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_tiny_check_and_zero_inline_meta_from_freelist (6 samples, 0.03%)</title><rect x="78.9932%" y="133" width="0.0337%" height="15" fill="rgb(207,7,3)" fg:x="14060" fg:w="6"/><text x="79.2432%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (132 samples, 0.74%)</title><rect x="79.0269%" y="133" width="0.7416%" height="15" fill="rgb(206,98,19)" fg:x="14066" fg:w="132"/><text x="79.2769%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_tiny_check_and_zero_inline_meta_from_freelist (73 samples, 0.41%)</title><rect x="81.3754%" y="117" width="0.4101%" height="15" fill="rgb(217,5,26)" fg:x="14484" fg:w="73"/><text x="81.6254%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1,042 samples, 5.85%)</title><rect x="76.4818%" y="165" width="5.8543%" height="15" fill="rgb(235,190,38)" fg:x="13613" fg:w="1042"/><text x="76.7318%" y="175.50">libsyst..</text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (794 samples, 4.46%)</title><rect x="77.8752%" y="149" width="4.4609%" height="15" fill="rgb(247,86,24)" fg:x="13861" fg:w="794"/><text x="78.1252%" y="159.50">libsy..</text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (457 samples, 2.57%)</title><rect x="79.7685%" y="133" width="2.5676%" height="15" fill="rgb(205,101,16)" fg:x="14198" fg:w="457"/><text x="80.0185%" y="143.50">li..</text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (98 samples, 0.55%)</title><rect x="81.7855%" y="117" width="0.5506%" height="15" fill="rgb(246,168,33)" fg:x="14557" fg:w="98"/><text x="82.0355%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (46 samples, 0.26%)</title><rect x="82.3361%" y="165" width="0.2584%" height="15" fill="rgb(231,114,1)" fg:x="14655" fg:w="46"/><text x="82.5861%" y="175.50"></text></g><g><title>mango_chess`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (5,200 samples, 29.22%)</title><rect x="53.6098%" y="197" width="29.2151%" height="15" fill="rgb(207,184,53)" fg:x="9542" fg:w="5200"/><text x="53.8598%" y="207.50">mango_chess`alloc::raw_vec::RawVec&lt;T,A&gt;::reserv..</text></g><g><title>mango_chess`alloc::raw_vec::finish_grow (4,688 samples, 26.34%)</title><rect x="56.4863%" y="181" width="26.3386%" height="15" fill="rgb(224,95,51)" fg:x="10054" fg:w="4688"/><text x="56.7363%" y="191.50">mango_chess`alloc::raw_vec::finish_grow</text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (41 samples, 0.23%)</title><rect x="82.5945%" y="165" width="0.2304%" height="15" fill="rgb(212,188,45)" fg:x="14701" fg:w="41"/><text x="82.8445%" y="175.50"></text></g><g><title>mango_chess`alloc::raw_vec::finish_grow (132 samples, 0.74%)</title><rect x="82.8249%" y="197" width="0.7416%" height="15" fill="rgb(223,154,38)" fg:x="14742" fg:w="132"/><text x="83.0749%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (2 samples, 0.01%)</title><rect x="83.8249%" y="165" width="0.0112%" height="15" fill="rgb(251,22,52)" fg:x="14920" fg:w="2"/><text x="84.0749%" y="175.50"></text></g><g><title>mango_chess`__rdl_alloc (2 samples, 0.01%)</title><rect x="83.8418%" y="165" width="0.0112%" height="15" fill="rgb(229,209,22)" fg:x="14923" fg:w="2"/><text x="84.0918%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_good_size (2 samples, 0.01%)</title><rect x="83.9598%" y="117" width="0.0112%" height="15" fill="rgb(234,138,34)" fg:x="14944" fg:w="2"/><text x="84.2098%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.01%)</title><rect x="84.0216%" y="69" width="0.0112%" height="15" fill="rgb(212,95,11)" fg:x="14955" fg:w="2"/><text x="84.2716%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.04%)</title><rect x="84.0047%" y="101" width="0.0393%" height="15" fill="rgb(240,179,47)" fg:x="14952" fg:w="7"/><text x="84.2547%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (6 samples, 0.03%)</title><rect x="84.0103%" y="85" width="0.0337%" height="15" fill="rgb(240,163,11)" fg:x="14953" fg:w="6"/><text x="84.2603%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (2 samples, 0.01%)</title><rect x="84.0328%" y="69" width="0.0112%" height="15" fill="rgb(236,37,12)" fg:x="14957" fg:w="2"/><text x="84.2828%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (2 samples, 0.01%)</title><rect x="84.0440%" y="101" width="0.0112%" height="15" fill="rgb(232,164,16)" fg:x="14959" fg:w="2"/><text x="84.2940%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`rack_get_thread_index (2 samples, 0.01%)</title><rect x="84.0609%" y="85" width="0.0112%" height="15" fill="rgb(244,205,15)" fg:x="14962" fg:w="2"/><text x="84.3109%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (4 samples, 0.02%)</title><rect x="84.0778%" y="69" width="0.0225%" height="15" fill="rgb(223,117,47)" fg:x="14965" fg:w="4"/><text x="84.3278%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (12 samples, 0.07%)</title><rect x="84.0553%" y="101" width="0.0674%" height="15" fill="rgb(244,107,35)" fg:x="14961" fg:w="12"/><text x="84.3053%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (9 samples, 0.05%)</title><rect x="84.0721%" y="85" width="0.0506%" height="15" fill="rgb(205,140,8)" fg:x="14964" fg:w="9"/><text x="84.3221%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (4 samples, 0.02%)</title><rect x="84.1002%" y="69" width="0.0225%" height="15" fill="rgb(228,84,46)" fg:x="14969" fg:w="4"/><text x="84.3502%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`_tiny_check_and_zero_inline_meta_from_freelist (2 samples, 0.01%)</title><rect x="84.1115%" y="53" width="0.0112%" height="15" fill="rgb(254,188,9)" fg:x="14971" fg:w="2"/><text x="84.3615%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (13 samples, 0.07%)</title><rect x="84.1227%" y="101" width="0.0730%" height="15" fill="rgb(206,112,54)" fg:x="14973" fg:w="13"/><text x="84.3727%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (11 samples, 0.06%)</title><rect x="84.1339%" y="85" width="0.0618%" height="15" fill="rgb(216,84,49)" fg:x="14975" fg:w="11"/><text x="84.3839%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`_tiny_check_and_zero_inline_meta_from_freelist (2 samples, 0.01%)</title><rect x="84.2913%" y="85" width="0.0112%" height="15" fill="rgb(214,194,35)" fg:x="15003" fg:w="2"/><text x="84.5413%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (6 samples, 0.03%)</title><rect x="84.3025%" y="85" width="0.0337%" height="15" fill="rgb(249,28,3)" fg:x="15005" fg:w="6"/><text x="84.5525%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (68 samples, 0.38%)</title><rect x="83.9710%" y="117" width="0.3820%" height="15" fill="rgb(222,56,52)" fg:x="14946" fg:w="68"/><text x="84.2210%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (28 samples, 0.16%)</title><rect x="84.1957%" y="101" width="0.1573%" height="15" fill="rgb(245,217,50)" fg:x="14986" fg:w="28"/><text x="84.4457%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (3 samples, 0.02%)</title><rect x="84.3362%" y="85" width="0.0169%" height="15" fill="rgb(213,201,24)" fg:x="15011" fg:w="3"/><text x="84.5862%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (3 samples, 0.02%)</title><rect x="84.3587%" y="117" width="0.0169%" height="15" fill="rgb(248,116,28)" fg:x="15015" fg:w="3"/><text x="84.6087%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (82 samples, 0.46%)</title><rect x="83.9429%" y="133" width="0.4607%" height="15" fill="rgb(219,72,43)" fg:x="14941" fg:w="82"/><text x="84.1929%" y="143.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (5 samples, 0.03%)</title><rect x="84.3755%" y="117" width="0.0281%" height="15" fill="rgb(209,138,14)" fg:x="15018" fg:w="5"/><text x="84.6255%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_realloc (4 samples, 0.02%)</title><rect x="84.4036%" y="133" width="0.0225%" height="15" fill="rgb(222,18,33)" fg:x="15023" fg:w="4"/><text x="84.6536%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (2 samples, 0.01%)</title><rect x="84.4261%" y="133" width="0.0112%" height="15" fill="rgb(213,199,7)" fg:x="15027" fg:w="2"/><text x="84.6761%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (108 samples, 0.61%)</title><rect x="83.8867%" y="149" width="0.6068%" height="15" fill="rgb(250,110,10)" fg:x="14931" fg:w="108"/><text x="84.1367%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (10 samples, 0.06%)</title><rect x="84.4373%" y="133" width="0.0562%" height="15" fill="rgb(248,123,6)" fg:x="15029" fg:w="10"/><text x="84.6873%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (9 samples, 0.05%)</title><rect x="84.4429%" y="117" width="0.0506%" height="15" fill="rgb(206,91,31)" fg:x="15030" fg:w="9"/><text x="84.6929%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`rack_get_thread_index (3 samples, 0.02%)</title><rect x="84.5216%" y="133" width="0.0169%" height="15" fill="rgb(211,154,13)" fg:x="15044" fg:w="3"/><text x="84.7716%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.03%)</title><rect x="84.5385%" y="133" width="0.0281%" height="15" fill="rgb(225,148,7)" fg:x="15047" fg:w="5"/><text x="84.7885%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (2 samples, 0.01%)</title><rect x="84.6003%" y="117" width="0.0112%" height="15" fill="rgb(220,160,43)" fg:x="15058" fg:w="2"/><text x="84.8503%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_tiny_check_and_zero_inline_meta_from_freelist (5 samples, 0.03%)</title><rect x="84.6733%" y="101" width="0.0281%" height="15" fill="rgb(213,52,39)" fg:x="15071" fg:w="5"/><text x="84.9233%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (41 samples, 0.23%)</title><rect x="84.4935%" y="149" width="0.2304%" height="15" fill="rgb(243,137,7)" fg:x="15039" fg:w="41"/><text x="84.7435%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (28 samples, 0.16%)</title><rect x="84.5665%" y="133" width="0.1573%" height="15" fill="rgb(230,79,13)" fg:x="15052" fg:w="28"/><text x="84.8165%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (20 samples, 0.11%)</title><rect x="84.6115%" y="117" width="0.1124%" height="15" fill="rgb(247,105,23)" fg:x="15060" fg:w="20"/><text x="84.8615%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (4 samples, 0.02%)</title><rect x="84.7014%" y="101" width="0.0225%" height="15" fill="rgb(223,179,41)" fg:x="15076" fg:w="4"/><text x="84.9514%" y="111.50"></text></g><g><title>mango_chess`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (171 samples, 0.96%)</title><rect x="83.7800%" y="181" width="0.9607%" height="15" fill="rgb(218,9,34)" fg:x="14912" fg:w="171"/><text x="84.0300%" y="191.50"></text></g><g><title>mango_chess`alloc::raw_vec::finish_grow (158 samples, 0.89%)</title><rect x="83.8530%" y="165" width="0.8877%" height="15" fill="rgb(222,106,8)" fg:x="14925" fg:w="158"/><text x="84.1030%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.01%)</title><rect x="84.7295%" y="149" width="0.0112%" height="15" fill="rgb(211,220,0)" fg:x="15081" fg:w="2"/><text x="84.9795%" y="159.50"></text></g><g><title>mango_chess`mango_chess::move_generation::bishop_moves (214 samples, 1.20%)</title><rect x="83.5665%" y="197" width="1.2023%" height="15" fill="rgb(229,52,16)" fg:x="14874" fg:w="214"/><text x="83.8165%" y="207.50"></text></g><g><title>mango_chess`alloc::raw_vec::finish_grow (5 samples, 0.03%)</title><rect x="84.7407%" y="181" width="0.0281%" height="15" fill="rgb(212,155,18)" fg:x="15083" fg:w="5"/><text x="84.9907%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.01%)</title><rect x="85.0104%" y="101" width="0.0112%" height="15" fill="rgb(242,21,14)" fg:x="15131" fg:w="2"/><text x="85.2604%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.01%)</title><rect x="85.0104%" y="85" width="0.0112%" height="15" fill="rgb(222,19,48)" fg:x="15131" fg:w="2"/><text x="85.2604%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2 samples, 0.01%)</title><rect x="85.0104%" y="69" width="0.0112%" height="15" fill="rgb(232,45,27)" fg:x="15131" fg:w="2"/><text x="85.2604%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (7 samples, 0.04%)</title><rect x="84.9879%" y="133" width="0.0393%" height="15" fill="rgb(249,103,42)" fg:x="15127" fg:w="7"/><text x="85.2379%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (5 samples, 0.03%)</title><rect x="84.9992%" y="117" width="0.0281%" height="15" fill="rgb(246,81,33)" fg:x="15129" fg:w="5"/><text x="85.2492%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (11 samples, 0.06%)</title><rect x="84.9767%" y="149" width="0.0618%" height="15" fill="rgb(252,33,42)" fg:x="15125" fg:w="11"/><text x="85.2267%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (2 samples, 0.01%)</title><rect x="85.0272%" y="133" width="0.0112%" height="15" fill="rgb(209,212,41)" fg:x="15134" fg:w="2"/><text x="85.2772%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (2 samples, 0.01%)</title><rect x="85.0272%" y="117" width="0.0112%" height="15" fill="rgb(207,154,6)" fg:x="15134" fg:w="2"/><text x="85.2772%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (4 samples, 0.02%)</title><rect x="85.0385%" y="149" width="0.0225%" height="15" fill="rgb(223,64,47)" fg:x="15136" fg:w="4"/><text x="85.2885%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (4 samples, 0.02%)</title><rect x="85.0385%" y="133" width="0.0225%" height="15" fill="rgb(211,161,38)" fg:x="15136" fg:w="4"/><text x="85.2885%" y="143.50"></text></g><g><title>mango_chess`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (26 samples, 0.15%)</title><rect x="84.9205%" y="181" width="0.1461%" height="15" fill="rgb(219,138,40)" fg:x="15115" fg:w="26"/><text x="85.1705%" y="191.50"></text></g><g><title>mango_chess`alloc::raw_vec::finish_grow (16 samples, 0.09%)</title><rect x="84.9767%" y="165" width="0.0899%" height="15" fill="rgb(241,228,46)" fg:x="15125" fg:w="16"/><text x="85.2267%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (15 samples, 0.08%)</title><rect x="85.8475%" y="149" width="0.0843%" height="15" fill="rgb(223,209,38)" fg:x="15280" fg:w="15"/><text x="86.0975%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.02%)</title><rect x="85.9374%" y="149" width="0.0169%" height="15" fill="rgb(236,164,45)" fg:x="15296" fg:w="3"/><text x="86.1874%" y="159.50"></text></g><g><title>mango_chess`DYLD-STUB$$realloc (2 samples, 0.01%)</title><rect x="85.9599%" y="149" width="0.0112%" height="15" fill="rgb(231,15,5)" fg:x="15300" fg:w="2"/><text x="86.2099%" y="159.50"></text></g><g><title>mango_chess`__rdl_alloc (5 samples, 0.03%)</title><rect x="85.9711%" y="149" width="0.0281%" height="15" fill="rgb(252,35,15)" fg:x="15302" fg:w="5"/><text x="86.2211%" y="159.50"></text></g><g><title>mango_chess`__rdl_realloc (3 samples, 0.02%)</title><rect x="85.9992%" y="149" width="0.0169%" height="15" fill="rgb(248,181,18)" fg:x="15307" fg:w="3"/><text x="86.2492%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_good_size (4 samples, 0.02%)</title><rect x="86.2071%" y="101" width="0.0225%" height="15" fill="rgb(233,39,42)" fg:x="15344" fg:w="4"/><text x="86.4571%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (2 samples, 0.01%)</title><rect x="86.3082%" y="85" width="0.0112%" height="15" fill="rgb(238,110,33)" fg:x="15362" fg:w="2"/><text x="86.5582%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (11 samples, 0.06%)</title><rect x="86.3195%" y="85" width="0.0618%" height="15" fill="rgb(233,195,10)" fg:x="15364" fg:w="11"/><text x="86.5695%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.04%)</title><rect x="86.3419%" y="69" width="0.0393%" height="15" fill="rgb(254,105,3)" fg:x="15368" fg:w="7"/><text x="86.5919%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (2 samples, 0.01%)</title><rect x="86.3700%" y="53" width="0.0112%" height="15" fill="rgb(221,225,9)" fg:x="15373" fg:w="2"/><text x="86.6200%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (9 samples, 0.05%)</title><rect x="86.3813%" y="85" width="0.0506%" height="15" fill="rgb(224,227,45)" fg:x="15375" fg:w="9"/><text x="86.6313%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`rack_get_thread_index (3 samples, 0.02%)</title><rect x="86.4374%" y="69" width="0.0169%" height="15" fill="rgb(229,198,43)" fg:x="15385" fg:w="3"/><text x="86.6874%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (21 samples, 0.12%)</title><rect x="86.4318%" y="85" width="0.1180%" height="15" fill="rgb(206,209,35)" fg:x="15384" fg:w="21"/><text x="86.6818%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (17 samples, 0.10%)</title><rect x="86.4543%" y="69" width="0.0955%" height="15" fill="rgb(245,195,53)" fg:x="15388" fg:w="17"/><text x="86.7043%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (11 samples, 0.06%)</title><rect x="86.4880%" y="53" width="0.0618%" height="15" fill="rgb(240,92,26)" fg:x="15394" fg:w="11"/><text x="86.7380%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`_tiny_check_and_zero_inline_meta_from_freelist (2 samples, 0.01%)</title><rect x="86.5386%" y="37" width="0.0112%" height="15" fill="rgb(207,40,23)" fg:x="15403" fg:w="2"/><text x="86.7886%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (21 samples, 0.12%)</title><rect x="86.5498%" y="85" width="0.1180%" height="15" fill="rgb(223,111,35)" fg:x="15405" fg:w="21"/><text x="86.7998%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (15 samples, 0.08%)</title><rect x="86.5835%" y="69" width="0.0843%" height="15" fill="rgb(229,147,28)" fg:x="15411" fg:w="15"/><text x="86.8335%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`_tiny_check_and_zero_inline_meta_from_freelist (5 samples, 0.03%)</title><rect x="86.8644%" y="69" width="0.0281%" height="15" fill="rgb(211,29,28)" fg:x="15461" fg:w="5"/><text x="87.1144%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (11 samples, 0.06%)</title><rect x="86.8925%" y="69" width="0.0618%" height="15" fill="rgb(228,72,33)" fg:x="15466" fg:w="11"/><text x="87.1425%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (64 samples, 0.36%)</title><rect x="86.6790%" y="85" width="0.3596%" height="15" fill="rgb(205,214,31)" fg:x="15428" fg:w="64"/><text x="86.9290%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (15 samples, 0.08%)</title><rect x="86.9543%" y="69" width="0.0843%" height="15" fill="rgb(224,111,15)" fg:x="15477" fg:w="15"/><text x="87.2043%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (147 samples, 0.83%)</title><rect x="86.2296%" y="101" width="0.8259%" height="15" fill="rgb(253,21,26)" fg:x="15348" fg:w="147"/><text x="86.4796%" y="111.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (3 samples, 0.02%)</title><rect x="87.0386%" y="85" width="0.0169%" height="15" fill="rgb(245,139,43)" fg:x="15492" fg:w="3"/><text x="87.2886%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (2 samples, 0.01%)</title><rect x="87.0555%" y="101" width="0.0112%" height="15" fill="rgb(252,170,7)" fg:x="15495" fg:w="2"/><text x="87.3055%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (167 samples, 0.94%)</title><rect x="86.1565%" y="117" width="0.9383%" height="15" fill="rgb(231,118,14)" fg:x="15335" fg:w="167"/><text x="86.4065%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (5 samples, 0.03%)</title><rect x="87.0667%" y="101" width="0.0281%" height="15" fill="rgb(238,83,0)" fg:x="15497" fg:w="5"/><text x="87.3167%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_realloc (3 samples, 0.02%)</title><rect x="87.0948%" y="117" width="0.0169%" height="15" fill="rgb(221,39,39)" fg:x="15502" fg:w="3"/><text x="87.3448%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (4 samples, 0.02%)</title><rect x="87.1116%" y="117" width="0.0225%" height="15" fill="rgb(222,119,46)" fg:x="15505" fg:w="4"/><text x="87.3616%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (214 samples, 1.20%)</title><rect x="86.0554%" y="133" width="1.2023%" height="15" fill="rgb(222,165,49)" fg:x="15317" fg:w="214"/><text x="86.3054%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (22 samples, 0.12%)</title><rect x="87.1341%" y="117" width="0.1236%" height="15" fill="rgb(219,113,52)" fg:x="15509" fg:w="22"/><text x="87.3841%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (19 samples, 0.11%)</title><rect x="87.1510%" y="101" width="0.1067%" height="15" fill="rgb(214,7,15)" fg:x="15512" fg:w="19"/><text x="87.4010%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`rack_get_thread_index (15 samples, 0.08%)</title><rect x="87.3307%" y="117" width="0.0843%" height="15" fill="rgb(235,32,4)" fg:x="15544" fg:w="15"/><text x="87.5807%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (8 samples, 0.04%)</title><rect x="87.4150%" y="117" width="0.0449%" height="15" fill="rgb(238,90,54)" fg:x="15559" fg:w="8"/><text x="87.6650%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (12 samples, 0.07%)</title><rect x="87.5667%" y="101" width="0.0674%" height="15" fill="rgb(213,208,19)" fg:x="15586" fg:w="12"/><text x="87.8167%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`_tiny_check_and_zero_inline_meta_from_freelist (10 samples, 0.06%)</title><rect x="87.7746%" y="85" width="0.0562%" height="15" fill="rgb(233,156,4)" fg:x="15623" fg:w="10"/><text x="88.0246%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (123 samples, 0.69%)</title><rect x="87.2577%" y="133" width="0.6911%" height="15" fill="rgb(207,194,5)" fg:x="15531" fg:w="123"/><text x="87.5077%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (87 samples, 0.49%)</title><rect x="87.4600%" y="117" width="0.4888%" height="15" fill="rgb(206,111,30)" fg:x="15567" fg:w="87"/><text x="87.7100%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (56 samples, 0.31%)</title><rect x="87.6341%" y="101" width="0.3146%" height="15" fill="rgb(243,70,54)" fg:x="15598" fg:w="56"/><text x="87.8841%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (21 samples, 0.12%)</title><rect x="87.8308%" y="85" width="0.1180%" height="15" fill="rgb(242,28,8)" fg:x="15633" fg:w="21"/><text x="88.0808%" y="95.50"></text></g><g><title>mango_chess`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (398 samples, 2.24%)</title><rect x="85.7464%" y="165" width="2.2361%" height="15" fill="rgb(219,106,18)" fg:x="15262" fg:w="398"/><text x="85.9964%" y="175.50">m..</text></g><g><title>mango_chess`alloc::raw_vec::finish_grow (350 samples, 1.97%)</title><rect x="86.0161%" y="149" width="1.9664%" height="15" fill="rgb(244,222,10)" fg:x="15310" fg:w="350"/><text x="86.2661%" y="159.50">m..</text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.03%)</title><rect x="87.9488%" y="133" width="0.0337%" height="15" fill="rgb(236,179,52)" fg:x="15654" fg:w="6"/><text x="88.1988%" y="143.50"></text></g><g><title>mango_chess`mango_chess::move_generation::generate_pseudo_moves_for_piece (580 samples, 3.26%)</title><rect x="84.7688%" y="197" width="3.2586%" height="15" fill="rgb(213,23,39)" fg:x="15088" fg:w="580"/><text x="85.0188%" y="207.50">man..</text></g><g><title>mango_chess`mango_chess::move_generation::bishop_moves (526 samples, 2.96%)</title><rect x="85.0722%" y="181" width="2.9552%" height="15" fill="rgb(238,48,10)" fg:x="15142" fg:w="526"/><text x="85.3222%" y="191.50">man..</text></g><g><title>mango_chess`alloc::raw_vec::finish_grow (8 samples, 0.04%)</title><rect x="87.9825%" y="165" width="0.0449%" height="15" fill="rgb(251,196,23)" fg:x="15660" fg:w="8"/><text x="88.2325%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (18 samples, 0.10%)</title><rect x="89.8646%" y="165" width="0.1011%" height="15" fill="rgb(250,152,24)" fg:x="15995" fg:w="18"/><text x="90.1146%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (15 samples, 0.08%)</title><rect x="89.9657%" y="165" width="0.0843%" height="15" fill="rgb(209,150,17)" fg:x="16013" fg:w="15"/><text x="90.2157%" y="175.50"></text></g><g><title>mango_chess`DYLD-STUB$$malloc (9 samples, 0.05%)</title><rect x="90.0500%" y="165" width="0.0506%" height="15" fill="rgb(234,202,34)" fg:x="16028" fg:w="9"/><text x="90.3000%" y="175.50"></text></g><g><title>mango_chess`DYLD-STUB$$realloc (8 samples, 0.04%)</title><rect x="90.1006%" y="165" width="0.0449%" height="15" fill="rgb(253,148,53)" fg:x="16037" fg:w="8"/><text x="90.3506%" y="175.50"></text></g><g><title>mango_chess`__rdl_alloc (4 samples, 0.02%)</title><rect x="90.1455%" y="165" width="0.0225%" height="15" fill="rgb(218,129,16)" fg:x="16045" fg:w="4"/><text x="90.3955%" y="175.50"></text></g><g><title>mango_chess`__rdl_realloc (4 samples, 0.02%)</title><rect x="90.1680%" y="165" width="0.0225%" height="15" fill="rgb(216,85,19)" fg:x="16049" fg:w="4"/><text x="90.4180%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (2 samples, 0.01%)</title><rect x="90.3141%" y="149" width="0.0112%" height="15" fill="rgb(235,228,7)" fg:x="16075" fg:w="2"/><text x="90.5641%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (8 samples, 0.04%)</title><rect x="90.8984%" y="117" width="0.0449%" height="15" fill="rgb(245,175,0)" fg:x="16179" fg:w="8"/><text x="91.1484%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (4 samples, 0.02%)</title><rect x="90.9433%" y="117" width="0.0225%" height="15" fill="rgb(208,168,36)" fg:x="16187" fg:w="4"/><text x="91.1933%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_good_size (14 samples, 0.08%)</title><rect x="90.9658%" y="117" width="0.0787%" height="15" fill="rgb(246,171,24)" fg:x="16191" fg:w="14"/><text x="91.2158%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.02%)</title><rect x="91.0444%" y="117" width="0.0169%" height="15" fill="rgb(215,142,24)" fg:x="16205" fg:w="3"/><text x="91.2944%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (19 samples, 0.11%)</title><rect x="91.3928%" y="101" width="0.1067%" height="15" fill="rgb(250,187,7)" fg:x="16267" fg:w="19"/><text x="91.6428%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`get_tiny_previous_free_msize (3 samples, 0.02%)</title><rect x="91.8198%" y="85" width="0.0169%" height="15" fill="rgb(228,66,33)" fg:x="16343" fg:w="3"/><text x="92.0698%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (20 samples, 0.11%)</title><rect x="92.1007%" y="69" width="0.1124%" height="15" fill="rgb(234,215,21)" fg:x="16393" fg:w="20"/><text x="92.3507%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (145 samples, 0.81%)</title><rect x="91.5051%" y="101" width="0.8147%" height="15" fill="rgb(222,191,20)" fg:x="16287" fg:w="145"/><text x="91.7551%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (85 samples, 0.48%)</title><rect x="91.8422%" y="85" width="0.4776%" height="15" fill="rgb(245,79,54)" fg:x="16347" fg:w="85"/><text x="92.0922%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (19 samples, 0.11%)</title><rect x="92.2130%" y="69" width="0.1067%" height="15" fill="rgb(240,10,37)" fg:x="16413" fg:w="19"/><text x="92.4630%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (13 samples, 0.07%)</title><rect x="92.3198%" y="101" width="0.0730%" height="15" fill="rgb(214,192,32)" fg:x="16432" fg:w="13"/><text x="92.5698%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`rack_get_thread_index (20 samples, 0.11%)</title><rect x="92.4434%" y="85" width="0.1124%" height="15" fill="rgb(209,36,54)" fg:x="16454" fg:w="20"/><text x="92.6934%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (2 samples, 0.01%)</title><rect x="92.5558%" y="85" width="0.0112%" height="15" fill="rgb(220,10,11)" fg:x="16474" fg:w="2"/><text x="92.8058%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.03%)</title><rect x="92.5670%" y="85" width="0.0281%" height="15" fill="rgb(221,106,17)" fg:x="16476" fg:w="5"/><text x="92.8170%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (8 samples, 0.04%)</title><rect x="92.6906%" y="69" width="0.0449%" height="15" fill="rgb(251,142,44)" fg:x="16498" fg:w="8"/><text x="92.9406%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (99 samples, 0.56%)</title><rect x="92.3928%" y="101" width="0.5562%" height="15" fill="rgb(238,13,15)" fg:x="16445" fg:w="99"/><text x="92.6428%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (63 samples, 0.35%)</title><rect x="92.5951%" y="85" width="0.3540%" height="15" fill="rgb(208,107,27)" fg:x="16481" fg:w="63"/><text x="92.8451%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (38 samples, 0.21%)</title><rect x="92.7355%" y="69" width="0.2135%" height="15" fill="rgb(205,136,37)" fg:x="16506" fg:w="38"/><text x="92.9855%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`_tiny_check_and_zero_inline_meta_from_freelist (8 samples, 0.04%)</title><rect x="92.9041%" y="53" width="0.0449%" height="15" fill="rgb(250,205,27)" fg:x="16536" fg:w="8"/><text x="93.1541%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (51 samples, 0.29%)</title><rect x="92.9490%" y="101" width="0.2865%" height="15" fill="rgb(210,80,43)" fg:x="16544" fg:w="51"/><text x="93.1990%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (42 samples, 0.24%)</title><rect x="92.9996%" y="85" width="0.2360%" height="15" fill="rgb(247,160,36)" fg:x="16553" fg:w="42"/><text x="93.2496%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.04%)</title><rect x="93.2356%" y="101" width="0.0393%" height="15" fill="rgb(234,13,49)" fg:x="16595" fg:w="7"/><text x="93.4856%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (3 samples, 0.02%)</title><rect x="93.2749%" y="101" width="0.0169%" height="15" fill="rgb(234,122,0)" fg:x="16602" fg:w="3"/><text x="93.5249%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`_tiny_check_and_zero_inline_meta_from_freelist (9 samples, 0.05%)</title><rect x="94.0952%" y="85" width="0.0506%" height="15" fill="rgb(207,146,38)" fg:x="16748" fg:w="9"/><text x="94.3452%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (30 samples, 0.17%)</title><rect x="94.1457%" y="85" width="0.1685%" height="15" fill="rgb(207,177,25)" fg:x="16757" fg:w="30"/><text x="94.3957%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (202 samples, 1.13%)</title><rect x="93.2974%" y="101" width="1.1349%" height="15" fill="rgb(211,178,42)" fg:x="16606" fg:w="202"/><text x="93.5474%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (21 samples, 0.12%)</title><rect x="94.3143%" y="85" width="0.1180%" height="15" fill="rgb(230,69,54)" fg:x="16787" fg:w="21"/><text x="94.5643%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (612 samples, 3.44%)</title><rect x="91.0613%" y="117" width="3.4384%" height="15" fill="rgb(214,135,41)" fg:x="16208" fg:w="612"/><text x="91.3113%" y="127.50">lib..</text></g><g><title>libsystem_platform.dylib`_platform_memset (12 samples, 0.07%)</title><rect x="94.4323%" y="101" width="0.0674%" height="15" fill="rgb(237,67,25)" fg:x="16808" fg:w="12"/><text x="94.6823%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (6 samples, 0.03%)</title><rect x="94.4997%" y="117" width="0.0337%" height="15" fill="rgb(222,189,50)" fg:x="16820" fg:w="6"/><text x="94.7497%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (30 samples, 0.17%)</title><rect x="94.5334%" y="117" width="0.1685%" height="15" fill="rgb(245,148,34)" fg:x="16826" fg:w="30"/><text x="94.7834%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (739 samples, 4.15%)</title><rect x="90.7017%" y="133" width="4.1519%" height="15" fill="rgb(222,29,6)" fg:x="16144" fg:w="739"/><text x="90.9517%" y="143.50">libsy..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (27 samples, 0.15%)</title><rect x="94.7019%" y="117" width="0.1517%" height="15" fill="rgb(221,189,43)" fg:x="16856" fg:w="27"/><text x="94.9519%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_realloc (8 samples, 0.04%)</title><rect x="94.8536%" y="133" width="0.0449%" height="15" fill="rgb(207,36,27)" fg:x="16883" fg:w="8"/><text x="95.1036%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (15 samples, 0.08%)</title><rect x="94.8986%" y="133" width="0.0843%" height="15" fill="rgb(217,90,24)" fg:x="16891" fg:w="15"/><text x="95.1486%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (886 samples, 4.98%)</title><rect x="90.3253%" y="149" width="4.9778%" height="15" fill="rgb(224,66,35)" fg:x="16077" fg:w="886"/><text x="90.5753%" y="159.50">libsys..</text></g><g><title>libsystem_malloc.dylib`szone_size (57 samples, 0.32%)</title><rect x="94.9829%" y="133" width="0.3202%" height="15" fill="rgb(221,13,50)" fg:x="16906" fg:w="57"/><text x="95.2329%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (50 samples, 0.28%)</title><rect x="95.0222%" y="117" width="0.2809%" height="15" fill="rgb(236,68,49)" fg:x="16913" fg:w="50"/><text x="95.2722%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`rack_get_thread_index (24 samples, 0.13%)</title><rect x="95.3874%" y="133" width="0.1348%" height="15" fill="rgb(229,146,28)" fg:x="16978" fg:w="24"/><text x="95.6374%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (4 samples, 0.02%)</title><rect x="95.5222%" y="133" width="0.0225%" height="15" fill="rgb(225,31,38)" fg:x="17002" fg:w="4"/><text x="95.7722%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (20 samples, 0.11%)</title><rect x="95.7413%" y="117" width="0.1124%" height="15" fill="rgb(250,208,3)" fg:x="17041" fg:w="20"/><text x="95.9913%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_tiny_check_and_zero_inline_meta_from_freelist (9 samples, 0.05%)</title><rect x="96.0110%" y="101" width="0.0506%" height="15" fill="rgb(246,54,23)" fg:x="17089" fg:w="9"/><text x="96.2610%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (160 samples, 0.90%)</title><rect x="95.3031%" y="149" width="0.8989%" height="15" fill="rgb(243,76,11)" fg:x="16963" fg:w="160"/><text x="95.5531%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (117 samples, 0.66%)</title><rect x="95.5447%" y="133" width="0.6573%" height="15" fill="rgb(245,21,50)" fg:x="17006" fg:w="117"/><text x="95.7947%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (62 samples, 0.35%)</title><rect x="95.8537%" y="117" width="0.3483%" height="15" fill="rgb(228,9,43)" fg:x="17061" fg:w="62"/><text x="96.1037%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (25 samples, 0.14%)</title><rect x="96.0616%" y="101" width="0.1405%" height="15" fill="rgb(208,100,47)" fg:x="17098" fg:w="25"/><text x="96.3116%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (8 samples, 0.04%)</title><rect x="96.2020%" y="149" width="0.0449%" height="15" fill="rgb(232,26,8)" fg:x="17123" fg:w="8"/><text x="96.4520%" y="159.50"></text></g><g><title>mango_chess`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1,171 samples, 6.58%)</title><rect x="89.6904%" y="181" width="6.5790%" height="15" fill="rgb(216,166,38)" fg:x="15964" fg:w="1171"/><text x="89.9404%" y="191.50">mango_che..</text></g><g><title>mango_chess`alloc::raw_vec::finish_grow (1,081 samples, 6.07%)</title><rect x="90.1961%" y="165" width="6.0734%" height="15" fill="rgb(251,202,51)" fg:x="16054" fg:w="1081"/><text x="90.4461%" y="175.50">mango_ch..</text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (4 samples, 0.02%)</title><rect x="96.2470%" y="149" width="0.0225%" height="15" fill="rgb(254,216,34)" fg:x="17131" fg:w="4"/><text x="96.4970%" y="159.50"></text></g><g><title>mango_chess`mango_chess::board_state::BoardState::square_is_attacked (13,322 samples, 74.85%)</title><rect x="21.5686%" y="213" width="74.8469%" height="15" fill="rgb(251,32,27)" fg:x="3839" fg:w="13322"/><text x="21.8186%" y="223.50">mango_chess`mango_chess::board_state::BoardState::square_is_attacked</text></g><g><title>mango_chess`mango_chess::move_generation::rook_moves (1,493 samples, 8.39%)</title><rect x="88.0274%" y="197" width="8.3881%" height="15" fill="rgb(208,127,28)" fg:x="15668" fg:w="1493"/><text x="88.2774%" y="207.50">mango_chess`..</text></g><g><title>mango_chess`alloc::raw_vec::finish_grow (26 samples, 0.15%)</title><rect x="96.2695%" y="181" width="0.1461%" height="15" fill="rgb(224,137,22)" fg:x="17135" fg:w="26"/><text x="96.5195%" y="191.50"></text></g><g><title>mango_chess`mango_chess::move_generation::bishop_moves (3 samples, 0.02%)</title><rect x="96.4155%" y="213" width="0.0169%" height="15" fill="rgb(254,70,32)" fg:x="17161" fg:w="3"/><text x="96.6655%" y="223.50"></text></g><g><title>mango_chess`mango_chess::move_generation::generate_pseudo_moves_for_piece (18 samples, 0.10%)</title><rect x="96.4324%" y="213" width="0.1011%" height="15" fill="rgb(229,75,37)" fg:x="17164" fg:w="18"/><text x="96.6824%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (6 samples, 0.03%)</title><rect x="96.8762%" y="165" width="0.0337%" height="15" fill="rgb(252,64,23)" fg:x="17243" fg:w="6"/><text x="97.1262%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (22 samples, 0.12%)</title><rect x="96.8032%" y="197" width="0.1236%" height="15" fill="rgb(232,162,48)" fg:x="17230" fg:w="22"/><text x="97.0532%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (17 samples, 0.10%)</title><rect x="96.8313%" y="181" width="0.0955%" height="15" fill="rgb(246,160,12)" fg:x="17235" fg:w="17"/><text x="97.0813%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (3 samples, 0.02%)</title><rect x="96.9099%" y="165" width="0.0169%" height="15" fill="rgb(247,166,0)" fg:x="17249" fg:w="3"/><text x="97.1599%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`rack_get_thread_index (4 samples, 0.02%)</title><rect x="96.9324%" y="181" width="0.0225%" height="15" fill="rgb(249,219,21)" fg:x="17253" fg:w="4"/><text x="97.1824%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (3 samples, 0.02%)</title><rect x="96.9549%" y="181" width="0.0169%" height="15" fill="rgb(205,209,3)" fg:x="17257" fg:w="3"/><text x="97.2049%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (6 samples, 0.03%)</title><rect x="96.9830%" y="165" width="0.0337%" height="15" fill="rgb(243,44,1)" fg:x="17262" fg:w="6"/><text x="97.2330%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (22 samples, 0.12%)</title><rect x="96.9268%" y="197" width="0.1236%" height="15" fill="rgb(206,159,16)" fg:x="17252" fg:w="22"/><text x="97.1768%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (14 samples, 0.08%)</title><rect x="96.9717%" y="181" width="0.0787%" height="15" fill="rgb(244,77,30)" fg:x="17260" fg:w="14"/><text x="97.2217%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (6 samples, 0.03%)</title><rect x="97.0167%" y="165" width="0.0337%" height="15" fill="rgb(218,69,12)" fg:x="17268" fg:w="6"/><text x="97.2667%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_tiny_check_and_zero_inline_meta_from_freelist (3 samples, 0.02%)</title><rect x="97.0335%" y="149" width="0.0169%" height="15" fill="rgb(212,87,7)" fg:x="17271" fg:w="3"/><text x="97.2835%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (3 samples, 0.02%)</title><rect x="97.0504%" y="197" width="0.0169%" height="15" fill="rgb(245,114,25)" fg:x="17274" fg:w="3"/><text x="97.3004%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (10 samples, 0.06%)</title><rect x="97.2639%" y="117" width="0.0562%" height="15" fill="rgb(210,61,42)" fg:x="17312" fg:w="10"/><text x="97.5139%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (9 samples, 0.05%)</title><rect x="97.3201%" y="117" width="0.0506%" height="15" fill="rgb(211,52,33)" fg:x="17322" fg:w="9"/><text x="97.5701%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (8 samples, 0.04%)</title><rect x="97.3257%" y="101" width="0.0449%" height="15" fill="rgb(234,58,33)" fg:x="17323" fg:w="8"/><text x="97.5757%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`_tiny_check_and_zero_inline_meta_from_freelist (3 samples, 0.02%)</title><rect x="97.5055%" y="101" width="0.0169%" height="15" fill="rgb(220,115,36)" fg:x="17355" fg:w="3"/><text x="97.7555%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (5 samples, 0.03%)</title><rect x="97.5223%" y="101" width="0.0281%" height="15" fill="rgb(243,153,54)" fg:x="17358" fg:w="5"/><text x="97.7723%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (63 samples, 0.35%)</title><rect x="97.2246%" y="133" width="0.3540%" height="15" fill="rgb(251,47,18)" fg:x="17305" fg:w="63"/><text x="97.4746%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (37 samples, 0.21%)</title><rect x="97.3706%" y="117" width="0.2079%" height="15" fill="rgb(242,102,42)" fg:x="17331" fg:w="37"/><text x="97.6206%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (5 samples, 0.03%)</title><rect x="97.5504%" y="101" width="0.0281%" height="15" fill="rgb(234,31,38)" fg:x="17363" fg:w="5"/><text x="97.8004%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (74 samples, 0.42%)</title><rect x="97.1740%" y="149" width="0.4158%" height="15" fill="rgb(221,117,51)" fg:x="17296" fg:w="74"/><text x="97.4240%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (3 samples, 0.02%)</title><rect x="97.5954%" y="149" width="0.0169%" height="15" fill="rgb(212,20,18)" fg:x="17371" fg:w="3"/><text x="97.8454%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (96 samples, 0.54%)</title><rect x="97.1178%" y="165" width="0.5394%" height="15" fill="rgb(245,133,36)" fg:x="17286" fg:w="96"/><text x="97.3678%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (8 samples, 0.04%)</title><rect x="97.6122%" y="149" width="0.0449%" height="15" fill="rgb(212,6,19)" fg:x="17374" fg:w="8"/><text x="97.8622%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (6 samples, 0.03%)</title><rect x="97.6235%" y="133" width="0.0337%" height="15" fill="rgb(218,1,36)" fg:x="17376" fg:w="6"/><text x="97.8735%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`rack_get_thread_index (4 samples, 0.02%)</title><rect x="97.6796%" y="149" width="0.0225%" height="15" fill="rgb(246,84,54)" fg:x="17386" fg:w="4"/><text x="97.9296%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (3 samples, 0.02%)</title><rect x="97.7246%" y="133" width="0.0169%" height="15" fill="rgb(242,110,6)" fg:x="17394" fg:w="3"/><text x="97.9746%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_tiny_check_and_zero_inline_meta_from_freelist (2 samples, 0.01%)</title><rect x="97.7864%" y="117" width="0.0112%" height="15" fill="rgb(214,47,5)" fg:x="17405" fg:w="2"/><text x="98.0364%" y="127.50"></text></g><g><title>mango_chess`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (136 samples, 0.76%)</title><rect x="97.0673%" y="197" width="0.7641%" height="15" fill="rgb(218,159,25)" fg:x="17277" fg:w="136"/><text x="97.3173%" y="207.50"></text></g><g><title>mango_chess`alloc::raw_vec::finish_grow (130 samples, 0.73%)</title><rect x="97.1010%" y="181" width="0.7304%" height="15" fill="rgb(215,211,28)" fg:x="17283" fg:w="130"/><text x="97.3510%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (31 samples, 0.17%)</title><rect x="97.6572%" y="165" width="0.1742%" height="15" fill="rgb(238,59,32)" fg:x="17382" fg:w="31"/><text x="97.9072%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (23 samples, 0.13%)</title><rect x="97.7021%" y="149" width="0.1292%" height="15" fill="rgb(226,82,3)" fg:x="17390" fg:w="23"/><text x="97.9521%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (16 samples, 0.09%)</title><rect x="97.7414%" y="133" width="0.0899%" height="15" fill="rgb(240,164,32)" fg:x="17397" fg:w="16"/><text x="97.9914%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (6 samples, 0.03%)</title><rect x="97.7976%" y="117" width="0.0337%" height="15" fill="rgb(232,46,7)" fg:x="17407" fg:w="6"/><text x="98.0476%" y="127.50"></text></g><g><title>mango_chess`alloc::raw_vec::finish_grow (3 samples, 0.02%)</title><rect x="97.8313%" y="197" width="0.0169%" height="15" fill="rgb(229,129,53)" fg:x="17413" fg:w="3"/><text x="98.0813%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_good_size (3 samples, 0.02%)</title><rect x="97.9774%" y="117" width="0.0169%" height="15" fill="rgb(234,188,29)" fg:x="17439" fg:w="3"/><text x="98.2274%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.01%)</title><rect x="98.0055%" y="101" width="0.0112%" height="15" fill="rgb(246,141,4)" fg:x="17444" fg:w="2"/><text x="98.2555%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`small_try_realloc_in_place (3 samples, 0.02%)</title><rect x="98.0167%" y="101" width="0.0169%" height="15" fill="rgb(229,23,39)" fg:x="17446" fg:w="3"/><text x="98.2667%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.04%)</title><rect x="98.0336%" y="101" width="0.0449%" height="15" fill="rgb(206,12,3)" fg:x="17449" fg:w="8"/><text x="98.2836%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (5 samples, 0.03%)</title><rect x="98.0505%" y="85" width="0.0281%" height="15" fill="rgb(252,226,20)" fg:x="17452" fg:w="5"/><text x="98.3005%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (4 samples, 0.02%)</title><rect x="98.0561%" y="69" width="0.0225%" height="15" fill="rgb(216,123,35)" fg:x="17453" fg:w="4"/><text x="98.3061%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (2 samples, 0.01%)</title><rect x="98.0673%" y="53" width="0.0112%" height="15" fill="rgb(212,68,40)" fg:x="17455" fg:w="2"/><text x="98.3173%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (17 samples, 0.10%)</title><rect x="97.9943%" y="117" width="0.0955%" height="15" fill="rgb(254,125,32)" fg:x="17442" fg:w="17"/><text x="98.2443%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (23 samples, 0.13%)</title><rect x="97.9718%" y="133" width="0.1292%" height="15" fill="rgb(253,97,22)" fg:x="17438" fg:w="23"/><text x="98.2218%" y="143.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.01%)</title><rect x="98.0898%" y="117" width="0.0112%" height="15" fill="rgb(241,101,14)" fg:x="17459" fg:w="2"/><text x="98.3398%" y="127.50"></text></g><g><title>mango_chess`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (28 samples, 0.16%)</title><rect x="97.9606%" y="181" width="0.1573%" height="15" fill="rgb(238,103,29)" fg:x="17436" fg:w="28"/><text x="98.2106%" y="191.50"></text></g><g><title>mango_chess`alloc::raw_vec::finish_grow (27 samples, 0.15%)</title><rect x="97.9662%" y="165" width="0.1517%" height="15" fill="rgb(233,195,47)" fg:x="17437" fg:w="27"/><text x="98.2162%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (27 samples, 0.15%)</title><rect x="97.9662%" y="149" width="0.1517%" height="15" fill="rgb(246,218,30)" fg:x="17437" fg:w="27"/><text x="98.2162%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (3 samples, 0.02%)</title><rect x="98.1010%" y="133" width="0.0169%" height="15" fill="rgb(219,145,47)" fg:x="17461" fg:w="3"/><text x="98.3510%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (2 samples, 0.01%)</title><rect x="98.1066%" y="117" width="0.0112%" height="15" fill="rgb(243,12,26)" fg:x="17462" fg:w="2"/><text x="98.3566%" y="127.50"></text></g><g><title>mango_chess`mango_chess::move_generation::bishop_moves (48 samples, 0.27%)</title><rect x="97.8538%" y="197" width="0.2697%" height="15" fill="rgb(214,87,16)" fg:x="17417" fg:w="48"/><text x="98.1038%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (3 samples, 0.02%)</title><rect x="98.6685%" y="101" width="0.0169%" height="15" fill="rgb(208,99,42)" fg:x="17562" fg:w="3"/><text x="98.9185%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.01%)</title><rect x="98.6741%" y="85" width="0.0112%" height="15" fill="rgb(253,99,2)" fg:x="17563" fg:w="2"/><text x="98.9241%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`small_try_realloc_in_place (2 samples, 0.01%)</title><rect x="98.6909%" y="101" width="0.0112%" height="15" fill="rgb(220,168,23)" fg:x="17566" fg:w="2"/><text x="98.9409%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.04%)</title><rect x="98.7022%" y="101" width="0.0449%" height="15" fill="rgb(242,38,24)" fg:x="17568" fg:w="8"/><text x="98.9522%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (6 samples, 0.03%)</title><rect x="98.7134%" y="85" width="0.0337%" height="15" fill="rgb(225,182,9)" fg:x="17570" fg:w="6"/><text x="98.9634%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (3 samples, 0.02%)</title><rect x="98.7303%" y="69" width="0.0169%" height="15" fill="rgb(243,178,37)" fg:x="17573" fg:w="3"/><text x="98.9803%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (2 samples, 0.01%)</title><rect x="98.7359%" y="53" width="0.0112%" height="15" fill="rgb(232,139,19)" fg:x="17574" fg:w="2"/><text x="98.9859%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (2 samples, 0.01%)</title><rect x="98.7471%" y="101" width="0.0112%" height="15" fill="rgb(225,201,24)" fg:x="17576" fg:w="2"/><text x="98.9971%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (24 samples, 0.13%)</title><rect x="98.6516%" y="117" width="0.1348%" height="15" fill="rgb(221,47,46)" fg:x="17559" fg:w="24"/><text x="98.9016%" y="127.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (4 samples, 0.02%)</title><rect x="98.7640%" y="101" width="0.0225%" height="15" fill="rgb(249,23,13)" fg:x="17579" fg:w="4"/><text x="99.0140%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (33 samples, 0.19%)</title><rect x="98.6123%" y="133" width="0.1854%" height="15" fill="rgb(219,9,5)" fg:x="17552" fg:w="33"/><text x="98.8623%" y="143.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.01%)</title><rect x="98.7864%" y="117" width="0.0112%" height="15" fill="rgb(254,171,16)" fg:x="17583" fg:w="2"/><text x="99.0364%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (37 samples, 0.21%)</title><rect x="98.6067%" y="149" width="0.2079%" height="15" fill="rgb(230,171,20)" fg:x="17551" fg:w="37"/><text x="98.8567%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (3 samples, 0.02%)</title><rect x="98.7977%" y="133" width="0.0169%" height="15" fill="rgb(210,71,41)" fg:x="17585" fg:w="3"/><text x="99.0477%" y="143.50"></text></g><g><title>mango_chess`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (39 samples, 0.22%)</title><rect x="98.6010%" y="181" width="0.2191%" height="15" fill="rgb(206,173,20)" fg:x="17550" fg:w="39"/><text x="98.8510%" y="191.50"></text></g><g><title>mango_chess`alloc::raw_vec::finish_grow (38 samples, 0.21%)</title><rect x="98.6067%" y="165" width="0.2135%" height="15" fill="rgb(233,88,34)" fg:x="17551" fg:w="38"/><text x="98.8567%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (2 samples, 0.01%)</title><rect x="99.0056%" y="133" width="0.0112%" height="15" fill="rgb(223,209,46)" fg:x="17622" fg:w="2"/><text x="99.2556%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_good_size (2 samples, 0.01%)</title><rect x="99.0393%" y="101" width="0.0112%" height="15" fill="rgb(250,43,18)" fg:x="17628" fg:w="2"/><text x="99.2893%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.01%)</title><rect x="99.0505%" y="101" width="0.0112%" height="15" fill="rgb(208,13,10)" fg:x="17630" fg:w="2"/><text x="99.3005%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (8 samples, 0.04%)</title><rect x="99.0842%" y="85" width="0.0449%" height="15" fill="rgb(212,200,36)" fg:x="17636" fg:w="8"/><text x="99.3342%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (3 samples, 0.02%)</title><rect x="99.1123%" y="69" width="0.0169%" height="15" fill="rgb(225,90,30)" fg:x="17641" fg:w="3"/><text x="99.3623%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`small_try_realloc_in_place (5 samples, 0.03%)</title><rect x="99.1348%" y="85" width="0.0281%" height="15" fill="rgb(236,182,39)" fg:x="17645" fg:w="5"/><text x="99.3848%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (3 samples, 0.02%)</title><rect x="99.1460%" y="69" width="0.0169%" height="15" fill="rgb(212,144,35)" fg:x="17647" fg:w="3"/><text x="99.3960%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.04%)</title><rect x="99.1629%" y="85" width="0.0393%" height="15" fill="rgb(228,63,44)" fg:x="17650" fg:w="7"/><text x="99.4129%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (6 samples, 0.03%)</title><rect x="99.1685%" y="69" width="0.0337%" height="15" fill="rgb(228,109,6)" fg:x="17651" fg:w="6"/><text x="99.4185%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (5 samples, 0.03%)</title><rect x="99.1741%" y="53" width="0.0281%" height="15" fill="rgb(238,117,24)" fg:x="17652" fg:w="5"/><text x="99.4241%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (3 samples, 0.02%)</title><rect x="99.2022%" y="85" width="0.0169%" height="15" fill="rgb(242,26,26)" fg:x="17657" fg:w="3"/><text x="99.4522%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (30 samples, 0.17%)</title><rect x="99.0617%" y="101" width="0.1685%" height="15" fill="rgb(221,92,48)" fg:x="17632" fg:w="30"/><text x="99.3117%" y="111.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (2 samples, 0.01%)</title><rect x="99.2191%" y="85" width="0.0112%" height="15" fill="rgb(209,209,32)" fg:x="17660" fg:w="2"/><text x="99.4691%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (40 samples, 0.22%)</title><rect x="99.0224%" y="117" width="0.2247%" height="15" fill="rgb(221,70,22)" fg:x="17625" fg:w="40"/><text x="99.2724%" y="127.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (3 samples, 0.02%)</title><rect x="99.2303%" y="101" width="0.0169%" height="15" fill="rgb(248,145,5)" fg:x="17662" fg:w="3"/><text x="99.4803%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (44 samples, 0.25%)</title><rect x="99.0168%" y="133" width="0.2472%" height="15" fill="rgb(226,116,26)" fg:x="17624" fg:w="44"/><text x="99.2668%" y="143.50"></text></g><g><title>mango_chess`mango_chess::move_generation::generate_pseudo_moves_for_piece (204 samples, 1.15%)</title><rect x="98.1235%" y="197" width="1.1461%" height="15" fill="rgb(244,5,17)" fg:x="17465" fg:w="204"/><text x="98.3735%" y="207.50"></text></g><g><title>mango_chess`mango_chess::move_generation::bishop_moves (79 samples, 0.44%)</title><rect x="98.8258%" y="181" width="0.4438%" height="15" fill="rgb(252,159,33)" fg:x="17590" fg:w="79"/><text x="99.0758%" y="191.50"></text></g><g><title>mango_chess`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (49 samples, 0.28%)</title><rect x="98.9943%" y="165" width="0.2753%" height="15" fill="rgb(206,71,0)" fg:x="17620" fg:w="49"/><text x="99.2443%" y="175.50"></text></g><g><title>mango_chess`alloc::raw_vec::finish_grow (47 samples, 0.26%)</title><rect x="99.0056%" y="149" width="0.2641%" height="15" fill="rgb(233,118,54)" fg:x="17622" fg:w="47"/><text x="99.2556%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (2 samples, 0.01%)</title><rect x="99.5393%" y="165" width="0.0112%" height="15" fill="rgb(234,83,48)" fg:x="17717" fg:w="2"/><text x="99.7893%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (4 samples, 0.02%)</title><rect x="99.6460%" y="101" width="0.0225%" height="15" fill="rgb(228,3,54)" fg:x="17736" fg:w="4"/><text x="99.8960%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (3 samples, 0.02%)</title><rect x="99.6517%" y="85" width="0.0169%" height="15" fill="rgb(226,155,13)" fg:x="17737" fg:w="3"/><text x="99.9017%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (2 samples, 0.01%)</title><rect x="99.6685%" y="101" width="0.0112%" height="15" fill="rgb(241,28,37)" fg:x="17740" fg:w="2"/><text x="99.9185%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`small_try_realloc_in_place (10 samples, 0.06%)</title><rect x="99.6854%" y="101" width="0.0562%" height="15" fill="rgb(233,93,10)" fg:x="17743" fg:w="10"/><text x="99.9354%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (2 samples, 0.01%)</title><rect x="99.7303%" y="85" width="0.0112%" height="15" fill="rgb(225,113,19)" fg:x="17751" fg:w="2"/><text x="99.9803%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.02%)</title><rect x="99.7416%" y="101" width="0.0169%" height="15" fill="rgb(241,2,18)" fg:x="17753" fg:w="3"/><text x="99.9916%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (2 samples, 0.01%)</title><rect x="99.7472%" y="85" width="0.0112%" height="15" fill="rgb(228,207,21)" fg:x="17754" fg:w="2"/><text x="99.9972%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (27 samples, 0.15%)</title><rect x="99.6236%" y="117" width="0.1517%" height="15" fill="rgb(213,211,35)" fg:x="17732" fg:w="27"/><text x="99.8736%" y="127.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (3 samples, 0.02%)</title><rect x="99.7584%" y="101" width="0.0169%" height="15" fill="rgb(209,83,10)" fg:x="17756" fg:w="3"/><text x="100.0084%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (40 samples, 0.22%)</title><rect x="99.5674%" y="133" width="0.2247%" height="15" fill="rgb(209,164,1)" fg:x="17722" fg:w="40"/><text x="99.8174%" y="143.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.01%)</title><rect x="99.7809%" y="117" width="0.0112%" height="15" fill="rgb(213,184,43)" fg:x="17760" fg:w="2"/><text x="100.0309%" y="127.50"></text></g><g><title>mango_chess`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (50 samples, 0.28%)</title><rect x="99.5337%" y="181" width="0.2809%" height="15" fill="rgb(231,61,34)" fg:x="17716" fg:w="50"/><text x="99.7837%" y="191.50"></text></g><g><title>mango_chess`alloc::raw_vec::finish_grow (47 samples, 0.26%)</title><rect x="99.5505%" y="165" width="0.2641%" height="15" fill="rgb(235,75,3)" fg:x="17719" fg:w="47"/><text x="99.8005%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (47 samples, 0.26%)</title><rect x="99.5505%" y="149" width="0.2641%" height="15" fill="rgb(220,106,47)" fg:x="17719" fg:w="47"/><text x="99.8005%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (3 samples, 0.02%)</title><rect x="99.7977%" y="133" width="0.0169%" height="15" fill="rgb(210,196,33)" fg:x="17763" fg:w="3"/><text x="100.0477%" y="143.50"></text></g><g><title>mango_chess`mango_chess::move_generation::generate_pseudo_moves_for_player (586 samples, 3.29%)</title><rect x="96.5335%" y="213" width="3.2923%" height="15" fill="rgb(229,154,42)" fg:x="17182" fg:w="586"/><text x="96.7835%" y="223.50">man..</text></g><g><title>mango_chess`mango_chess::move_generation::rook_moves (99 samples, 0.56%)</title><rect x="99.2696%" y="197" width="0.5562%" height="15" fill="rgb(228,114,26)" fg:x="17669" fg:w="99"/><text x="99.5196%" y="207.50"></text></g><g><title>mango_chess`alloc::raw_vec::finish_grow (2 samples, 0.01%)</title><rect x="99.8146%" y="181" width="0.0112%" height="15" fill="rgb(208,144,1)" fg:x="17766" fg:w="2"/><text x="100.0646%" y="191.50"></text></g><g><title>mango_chess`mango_chess::move_generation::generate_moves (16,015 samples, 89.98%)</title><rect x="10.0174%" y="229" width="89.9770%" height="15" fill="rgb(239,112,37)" fg:x="1783" fg:w="16015"/><text x="10.2674%" y="239.50">mango_chess`mango_chess::move_generation::generate_moves</text></g><g><title>mango_chess`mango_chess::move_generation::rook_moves (30 samples, 0.17%)</title><rect x="99.8258%" y="213" width="0.1685%" height="15" fill="rgb(210,96,50)" fg:x="17768" fg:w="30"/><text x="100.0758%" y="223.50"></text></g><g><title>all (17,799 samples, 100%)</title><rect x="0.0000%" y="421" width="100.0000%" height="15" fill="rgb(222,178,2)" fg:x="0" fg:w="17799"/><text x="0.2500%" y="431.50"></text></g><g><title>dyld`start (17,799 samples, 100.00%)</title><rect x="0.0000%" y="405" width="100.0000%" height="15" fill="rgb(226,74,18)" fg:x="0" fg:w="17799"/><text x="0.2500%" y="415.50">dyld`start</text></g><g><title>mango_chess`main (17,799 samples, 100.00%)</title><rect x="0.0000%" y="389" width="100.0000%" height="15" fill="rgb(225,67,54)" fg:x="0" fg:w="17799"/><text x="0.2500%" y="399.50">mango_chess`main</text></g><g><title>mango_chess`std::rt::lang_start_internal (17,799 samples, 100.00%)</title><rect x="0.0000%" y="373" width="100.0000%" height="15" fill="rgb(251,92,32)" fg:x="0" fg:w="17799"/><text x="0.2500%" y="383.50">mango_chess`std::rt::lang_start_internal</text></g><g><title>mango_chess`std::rt::lang_start::_{{closure}} (17,799 samples, 100.00%)</title><rect x="0.0000%" y="357" width="100.0000%" height="15" fill="rgb(228,149,22)" fg:x="0" fg:w="17799"/><text x="0.2500%" y="367.50">mango_chess`std::rt::lang_start::_{{closure}}</text></g><g><title>mango_chess`std::sys_common::backtrace::__rust_begin_short_backtrace (17,799 samples, 100.00%)</title><rect x="0.0000%" y="341" width="100.0000%" height="15" fill="rgb(243,54,13)" fg:x="0" fg:w="17799"/><text x="0.2500%" y="351.50">mango_chess`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>mango_chess`mango_chess::main (17,799 samples, 100.00%)</title><rect x="0.0000%" y="325" width="100.0000%" height="15" fill="rgb(243,180,28)" fg:x="0" fg:w="17799"/><text x="0.2500%" y="335.50">mango_chess`mango_chess::main</text></g><g><title>mango_chess`mango_chess::search::search (17,799 samples, 100.00%)</title><rect x="0.0000%" y="309" width="100.0000%" height="15" fill="rgb(208,167,24)" fg:x="0" fg:w="17799"/><text x="0.2500%" y="319.50">mango_chess`mango_chess::search::search</text></g><g><title>mango_chess`mango_chess::search::negamax (17,799 samples, 100.00%)</title><rect x="0.0000%" y="293" width="100.0000%" height="15" fill="rgb(245,73,45)" fg:x="0" fg:w="17799"/><text x="0.2500%" y="303.50">mango_chess`mango_chess::search::negamax</text></g><g><title>mango_chess`mango_chess::search::negamax (17,792 samples, 99.96%)</title><rect x="0.0393%" y="277" width="99.9607%" height="15" fill="rgb(237,203,48)" fg:x="7" fg:w="17792"/><text x="0.2893%" y="287.50">mango_chess`mango_chess::search::negamax</text></g><g><title>mango_chess`mango_chess::search::negamax (17,735 samples, 99.64%)</title><rect x="0.3596%" y="261" width="99.6404%" height="15" fill="rgb(211,197,16)" fg:x="64" fg:w="17735"/><text x="0.6096%" y="271.50">mango_chess`mango_chess::search::negamax</text></g><g><title>mango_chess`mango_chess::search::negamax (16,333 samples, 91.76%)</title><rect x="8.2364%" y="245" width="91.7636%" height="15" fill="rgb(243,99,51)" fg:x="1466" fg:w="16333"/><text x="8.4864%" y="255.50">mango_chess`mango_chess::search::negamax</text></g></svg></svg>